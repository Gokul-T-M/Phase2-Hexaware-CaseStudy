ë
nC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.DAL\Repositories\PatientRepository.cs
	namespace

 	
	AmazeCare


 
.

 
DAL

 
.

 
Repositories

 $
{ 
public 

class 
PatientRepository "
:# $
GenericRepository% 6
<6 7
Patient7 >
>> ?
,? @
IPatientRepositoryA S
{ 
public 
PatientRepository  
(  !
AmazeCareDbContext! 3
context4 ;
); <
:= >
base? C
(C D
contextD K
)K L
{ 	
} 	
} 
} Œ
nC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.DAL\Repositories\GenericRepository.cs
	namespace 	
	AmazeCare
 
. 
DAL 
. 
Repositories $
{ 
public 

class 
GenericRepository "
<" #
T# $
>$ %
:& '
IGenericRepository( :
<: ;
T; <
>< =
where> C
TD E
:F G
classH M
{ 
private 
readonly 
AmazeCareDbContext +
_context, 4
;4 5
private 
readonly 
DbSet 
< 
T  
>  !
_dbSet" (
;( )
public 
GenericRepository  
(  !
AmazeCareDbContext! 3
context4 ;
); <
{ 	
_context 
= 
context 
; 
_dbSet 
= 
context 
. 
Set  
<  !
T! "
>" #
(# $
)$ %
;% &
} 	
public 
async 
Task 
< 
IEnumerable %
<% &
T& '
>' (
>( )
GetAllAsync* 5
(5 6
)6 7
{ 	
return 
await 
_dbSet 
.  
ToListAsync  +
(+ ,
), -
;- .
} 	
public 
async 
Task 
< 
T 
? 
> 
GetByIdAsync *
(* +
int+ .
id/ 1
)1 2
{ 	
return 
await 
_dbSet 
.  
	FindAsync  )
() *
id* ,
), -
;- .
}   	
public"" 
async"" 
Task"" 
<"" 
IEnumerable"" %
<""% &
T""& '
>""' (
>""( )
	FindAsync""* 3
(""3 4

Expression""4 >
<""> ?
Func""? C
<""C D
T""D E
,""E F
bool""G K
>""K L
>""L M
	predicate""N W
)""W X
{## 	
return$$ 
await$$ 
_dbSet$$ 
.$$  
Where$$  %
($$% &
	predicate$$& /
)$$/ 0
.$$0 1
ToListAsync$$1 <
($$< =
)$$= >
;$$> ?
}%% 	
public'' 
async'' 
Task'' 
AddAsync'' "
(''" #
T''# $
entity''% +
)''+ ,
{(( 	
await)) 
_dbSet)) 
.)) 
AddAsync)) !
())! "
entity))" (
)))( )
;))) *
}** 	
public,, 
void,, 
Update,, 
(,, 
T,, 
entity,, #
),,# $
{-- 	
_dbSet.. 
... 
Update.. 
(.. 
entity..  
)..  !
;..! "
}// 	
public11 
void11 
Delete11 
(11 
T11 
entity11 #
)11# $
{22 	
_dbSet33 
.33 
Remove33 
(33 
entity33  
)33  !
;33! "
}44 	
public66 
async66 
Task66 
<66 
int66 
>66 
	SaveAsync66 (
(66( )
)66) *
{77 	
return88 
await88 
_context88 !
.88! "
SaveChangesAsync88" 2
(882 3
)883 4
;884 5
}99 	
};; 
}<< æ
mC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.DAL\Repositories\DoctorRepository.cs
	namespace

 	
	AmazeCare


 
.

 
DAL

 
.

 
Repositories

 $
{ 
public 

class 
DoctorRepository !
:" #
GenericRepository$ 5
<5 6
Doctor6 <
>< =
,= >
IDoctorRepository? P
{ 
public 
DoctorRepository 
(  
AmazeCareDbContext  2
context3 :
): ;
:< =
base> B
(B C
contextC J
)J K
{ 	
} 	
} 
} ™#
rC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.DAL\Repositories\AppointmentRepository.cs
	namespace 	
	AmazeCare
 
. 
DAL 
. 
Repositories $
{ 
public 

class !
AppointmentRepository &
:' (
GenericRepository) :
<: ;
Appointment; F
>F G
,G H"
IAppointmentRepositoryI _
{ 
private 
readonly 
DbSet 
< 
Appointment *
>* +
_dbSet, 2
;2 3
public !
AppointmentRepository $
($ %
AmazeCareDbContext% 7
context8 ?
)? @
:A B
baseC G
(G H
contextH O
)O P
{ 	
_dbSet 
= 
context 
. 
Set  
<  !
Appointment! ,
>, -
(- .
). /
;/ 0
} 	
public 
async 
Task 
< 
IEnumerable %
<% &
Appointment& 1
>1 2
>2 3"
GetAllWithDetailsAsync4 J
(J K
)K L
{ 	
return 
await 
_dbSet 
. 
Include 
( 
a 
=> 
a 
.  
Patient  '
)' (
. 
Include 
( 
a 
=> 
a 
.  
Doctor  &
)& '
. 
ToListAsync 
( 
) 
; 
} 	
public 
async 
Task 
< 
Appointment %
?% &
>& '#
GetByIdWithDetailsAsync( ?
(? @
int@ C
idD F
)F G
{ 	
return   
await   
_dbSet   
.!! 
Include!! 
(!! 
a!! 
=>!! 
a!! 
.!!  
Patient!!  '
)!!' (
."" 
Include"" 
("" 
a"" 
=>"" 
a"" 
.""  
Doctor""  &
)""& '
.## 
FirstOrDefaultAsync## $
(##$ %
a##% &
=>##' )
a##* +
.##+ ,
AppointmentId##, 9
==##: <
id##= ?
)##? @
;##@ A
}$$ 	
public&& 
async&& 
Task&& 
<&& 
IEnumerable&& %
<&&% &
Appointment&&& 1
>&&1 2
>&&2 3+
GetAppointmentsByPatientIdAsync&&4 S
(&&S T
int&&T W
	patientId&&X a
)&&a b
{'' 	
return(( 
await(( 
_dbSet(( 
.((  
Include((  '
(((' (
a((( )
=>((* ,
a((- .
.((. /
Patient((/ 6
)((6 7
.))  
Include))  '
())' (
a))( )
=>))* ,
a))- .
.)). /
Doctor))/ 5
)))5 6
.**  
Where**  %
(**% &
a**& '
=>**( *
a**+ ,
.**, -
	PatientId**- 6
==**7 9
	patientId**: C
)**C D
.++  
ToListAsync++  +
(+++ ,
)++, -
;++- .
},, 	
public.. 
async.. 
Task.. 
<.. 
IEnumerable.. %
<..% &
Appointment..& 1
>..1 2
>..2 3*
GetAppointmentsByDoctorIdAsync..4 R
(..R S
int..S V
doctorId..W _
).._ `
{// 	
return00 
await00 
_dbSet00 
.00  
Include00  '
(00' (
a00( )
=>00* ,
a00- .
.00. /
Patient00/ 6
)006 7
.11  
Include11  '
(11' (
a11( )
=>11* ,
a11- .
.11. /
Doctor11/ 5
)115 6
.22  
Where22  %
(22% &
a22& '
=>22( *
a22+ ,
.22, -
DoctorId22- 5
==226 8
doctorId229 A
)22A B
.33  
ToListAsync33  +
(33+ ,
)33, -
;33- .
}44 	
}77 
}88 á
lC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.DAL\Repositories\AdminRepository.cs
	namespace

 	
	AmazeCare


 
.

 
DAL

 
.

 
Repositories

 $
{ 
public 

class 
AdminRepository  
:! "
GenericRepository# 4
<4 5
Admin5 :
>: ;
,; <
IAdminRepository= M
{ 
public 
AdminRepository 
( 
AmazeCareDbContext 1
context2 9
)9 :
:; <
base= A
(A B
contextB I
)I J
{ 	
} 	
} 
} Ö
šC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.DAL\Migrations\20250701165539_RenamedSymptomsToPreviousMedicalRecordsinPatient.cs
	namespace 	
	AmazeCare
 
. 
DAL 
. 

Migrations "
{ 
public 

partial 
class <
0RenamedSymptomsToPreviousMedicalRecordsinPatient I
:J K
	MigrationL U
{		 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
RenameColumn )
() *
name 
: 
$str  
,  !
table 
: 
$str !
,! "
newName 
: 
$str 1
)1 2
;2 3
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 
RenameColumn )
() *
name 
: 
$str .
,. /
table 
: 
$str !
,! "
newName 
: 
$str #
)# $
;$ %
} 	
} 
} È
ŠC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.DAL\Migrations\20250701111346_AddConsultingFieldsToAppointment.cs
	namespace 	
	AmazeCare
 
. 
DAL 
. 

Migrations "
{ 
public 

partial 
class ,
 AddConsultingFieldsToAppointment 9
:: ;
	Migration< E
{		 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str %
,% &
table 
: 
$str %
,% &
type 
: 
$str %
,% &
	maxLength 
: 
$num 
, 
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str (
,( )
table 
: 
$str %
,% &
type 
: 
$str %
,% &
	maxLength 
: 
$num 
, 
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str  
,  !
table 
: 
$str %
,% &
type 
: 
$str %
,% &
	maxLength 
: 
$num 
, 
nullable   
:   
true   
)   
;    
}!! 	
	protected$$ 
override$$ 
void$$ 
Down$$  $
($$$ %
MigrationBuilder$$% 5
migrationBuilder$$6 F
)$$F G
{%% 	
migrationBuilder&& 
.&& 

DropColumn&& '
(&&' (
name'' 
:'' 
$str'' %
,''% &
table(( 
:(( 
$str(( %
)((% &
;((& '
migrationBuilder** 
.** 

DropColumn** '
(**' (
name++ 
:++ 
$str++ (
,++( )
table,, 
:,, 
$str,, %
),,% &
;,,& '
migrationBuilder.. 
... 

DropColumn.. '
(..' (
name// 
:// 
$str//  
,//  !
table00 
:00 
$str00 %
)00% &
;00& '
}11 	
}22 
}33 Šr
wC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.DAL\Migrations\20250701055858_InitialCreate.cs
	namespace 	
	AmazeCare
 
. 
DAL 
. 

Migrations "
{ 
public		 

partial		 
class		 
InitialCreate		 &
:		' (
	Migration		) 2
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
, 
columns 
: 
table 
=> !
new" %
{ 
AdminId 
= 
table #
.# $
Column$ *
<* +
int+ .
>. /
(/ 0
type0 4
:4 5
$str6 ;
,; <
nullable= E
:E F
falseG L
)L M
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 E
,E F
	maxLengthG P
:P Q
$numR U
,U V
nullableW _
:_ `
falsea f
)f g
,g h
Email 
= 
table !
.! "
Column" (
<( )
string) /
>/ 0
(0 1
type1 5
:5 6
$str7 F
,F G
nullableH P
:P Q
falseR W
)W X
,X Y
Password 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: I
,I J
nullableK S
:S T
falseU Z
)Z [
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 0
,0 1
x2 3
=>4 6
x7 8
.8 9
AdminId9 @
)@ A
;A B
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
,  
columns 
: 
table 
=> !
new" %
{   
DoctorId!! 
=!! 
table!! $
.!!$ %
Column!!% +
<!!+ ,
int!!, /
>!!/ 0
(!!0 1
type!!1 5
:!!5 6
$str!!7 <
,!!< =
nullable!!> F
:!!F G
false!!H M
)!!M N
."" 

Annotation"" #
(""# $
$str""$ 8
,""8 9
$str"": @
)""@ A
,""A B
Name## 
=## 
table##  
.##  !
Column##! '
<##' (
string##( .
>##. /
(##/ 0
type##0 4
:##4 5
$str##6 E
,##E F
	maxLength##G P
:##P Q
$num##R U
,##U V
nullable##W _
:##_ `
false##a f
)##f g
,##g h
Email$$ 
=$$ 
table$$ !
.$$! "
Column$$" (
<$$( )
string$$) /
>$$/ 0
($$0 1
type$$1 5
:$$5 6
$str$$7 F
,$$F G
nullable$$H P
:$$P Q
false$$R W
)$$W X
,$$X Y
Password%% 
=%% 
table%% $
.%%$ %
Column%%% +
<%%+ ,
string%%, 2
>%%2 3
(%%3 4
type%%4 8
:%%8 9
$str%%: I
,%%I J
nullable%%K S
:%%S T
false%%U Z
)%%Z [
,%%[ \
	Specialty&& 
=&& 
table&&  %
.&&% &
Column&&& ,
<&&, -
string&&- 3
>&&3 4
(&&4 5
type&&5 9
:&&9 :
$str&&; J
,&&J K
nullable&&L T
:&&T U
false&&V [
)&&[ \
,&&\ ]

Experience'' 
=''  
table''! &
.''& '
Column''' -
<''- .
int''. 1
>''1 2
(''2 3
type''3 7
:''7 8
$str''9 >
,''> ?
nullable''@ H
:''H I
false''J O
)''O P
,''P Q
Qualification(( !
=((" #
table(($ )
.(() *
Column((* 0
<((0 1
string((1 7
>((7 8
(((8 9
type((9 =
:((= >
$str((? N
,((N O
nullable((P X
:((X Y
false((Z _
)((_ `
,((` a
Designation)) 
=))  !
table))" '
.))' (
Column))( .
<)). /
string))/ 5
>))5 6
())6 7
type))7 ;
:)); <
$str))= L
,))L M
nullable))N V
:))V W
false))X ]
)))] ^
}** 
,** 
constraints++ 
:++ 
table++ "
=>++# %
{,, 
table-- 
.-- 

PrimaryKey-- $
(--$ %
$str--% 1
,--1 2
x--3 4
=>--5 7
x--8 9
.--9 :
DoctorId--: B
)--B C
;--C D
}.. 
).. 
;.. 
migrationBuilder00 
.00 
CreateTable00 (
(00( )
name11 
:11 
$str11  
,11  !
columns22 
:22 
table22 
=>22 !
new22" %
{33 
	PatientId44 
=44 
table44  %
.44% &
Column44& ,
<44, -
int44- 0
>440 1
(441 2
type442 6
:446 7
$str448 =
,44= >
nullable44? G
:44G H
false44I N
)44N O
.55 

Annotation55 #
(55# $
$str55$ 8
,558 9
$str55: @
)55@ A
,55A B
Name66 
=66 
table66  
.66  !
Column66! '
<66' (
string66( .
>66. /
(66/ 0
type660 4
:664 5
$str666 E
,66E F
	maxLength66G P
:66P Q
$num66R U
,66U V
nullable66W _
:66_ `
false66a f
)66f g
,66g h
Email77 
=77 
table77 !
.77! "
Column77" (
<77( )
string77) /
>77/ 0
(770 1
type771 5
:775 6
$str777 F
,77F G
nullable77H P
:77P Q
false77R W
)77W X
,77X Y
Password88 
=88 
table88 $
.88$ %
Column88% +
<88+ ,
string88, 2
>882 3
(883 4
type884 8
:888 9
$str88: I
,88I J
nullable88K S
:88S T
false88U Z
)88Z [
,88[ \
DateOfBirth99 
=99  !
table99" '
.99' (
Column99( .
<99. /
DateTime99/ 7
>997 8
(998 9
type999 =
:99= >
$str99? J
,99J K
nullable99L T
:99T U
false99V [
)99[ \
,99\ ]
Gender:: 
=:: 
table:: "
.::" #
Column::# )
<::) *
string::* 0
>::0 1
(::1 2
type::2 6
:::6 7
$str::8 F
,::F G
	maxLength::H Q
:::Q R
$num::S U
,::U V
nullable::W _
:::_ `
false::a f
)::f g
,::g h
ContactNumber;; !
=;;" #
table;;$ )
.;;) *
Column;;* 0
<;;0 1
string;;1 7
>;;7 8
(;;8 9
type;;9 =
:;;= >
$str;;? N
,;;N O
nullable;;P X
:;;X Y
false;;Z _
);;_ `
,;;` a
Symptoms<< 
=<< 
table<< $
.<<$ %
Column<<% +
<<<+ ,
string<<, 2
><<2 3
(<<3 4
type<<4 8
:<<8 9
$str<<: I
,<<I J
	maxLength<<K T
:<<T U
$num<<V Y
,<<Y Z
nullable<<[ c
:<<c d
true<<e i
)<<i j
}== 
,== 
constraints>> 
:>> 
table>> "
=>>># %
{?? 
table@@ 
.@@ 

PrimaryKey@@ $
(@@$ %
$str@@% 2
,@@2 3
x@@4 5
=>@@6 8
x@@9 :
.@@: ;
	PatientId@@; D
)@@D E
;@@E F
}AA 
)AA 
;AA 
migrationBuilderCC 
.CC 
CreateTableCC (
(CC( )
nameDD 
:DD 
$strDD $
,DD$ %
columnsEE 
:EE 
tableEE 
=>EE !
newEE" %
{FF 
AppointmentIdGG !
=GG" #
tableGG$ )
.GG) *
ColumnGG* 0
<GG0 1
intGG1 4
>GG4 5
(GG5 6
typeGG6 :
:GG: ;
$strGG< A
,GGA B
nullableGGC K
:GGK L
falseGGM R
)GGR S
.HH 

AnnotationHH #
(HH# $
$strHH$ 8
,HH8 9
$strHH: @
)HH@ A
,HHA B
AppointmentDateII #
=II$ %
tableII& +
.II+ ,
ColumnII, 2
<II2 3
DateTimeII3 ;
>II; <
(II< =
typeII= A
:IIA B
$strIIC N
,IIN O
nullableIIP X
:IIX Y
falseIIZ _
)II_ `
,II` a
StatusJJ 
=JJ 
tableJJ "
.JJ" #
ColumnJJ# )
<JJ) *
stringJJ* 0
>JJ0 1
(JJ1 2
typeJJ2 6
:JJ6 7
$strJJ8 G
,JJG H
nullableJJI Q
:JJQ R
falseJJS X
)JJX Y
,JJY Z
ConsultingDetailsKK %
=KK& '
tableKK( -
.KK- .
ColumnKK. 4
<KK4 5
stringKK5 ;
>KK; <
(KK< =
typeKK= A
:KKA B
$strKKC R
,KKR S
	maxLengthKKT ]
:KK] ^
$numKK_ b
,KKb c
nullableKKd l
:KKl m
trueKKn r
)KKr s
,KKs t
	PatientIdLL 
=LL 
tableLL  %
.LL% &
ColumnLL& ,
<LL, -
intLL- 0
>LL0 1
(LL1 2
typeLL2 6
:LL6 7
$strLL8 =
,LL= >
nullableLL? G
:LLG H
falseLLI N
)LLN O
,LLO P
DoctorIdMM 
=MM 
tableMM $
.MM$ %
ColumnMM% +
<MM+ ,
intMM, /
>MM/ 0
(MM0 1
typeMM1 5
:MM5 6
$strMM7 <
,MM< =
nullableMM> F
:MMF G
falseMMH M
)MMM N
}NN 
,NN 
constraintsOO 
:OO 
tableOO "
=>OO# %
{PP 
tableQQ 
.QQ 

PrimaryKeyQQ $
(QQ$ %
$strQQ% 6
,QQ6 7
xQQ8 9
=>QQ: <
xQQ= >
.QQ> ?
AppointmentIdQQ? L
)QQL M
;QQM N
tableRR 
.RR 

ForeignKeyRR $
(RR$ %
nameSS 
:SS 
$strSS @
,SS@ A
columnTT 
:TT 
xTT  !
=>TT" $
xTT% &
.TT& '
DoctorIdTT' /
,TT/ 0
principalTableUU &
:UU& '
$strUU( 1
,UU1 2
principalColumnVV '
:VV' (
$strVV) 3
,VV3 4
onDeleteWW  
:WW  !
ReferentialActionWW" 3
.WW3 4
CascadeWW4 ;
)WW; <
;WW< =
tableXX 
.XX 

ForeignKeyXX $
(XX$ %
nameYY 
:YY 
$strYY B
,YYB C
columnZZ 
:ZZ 
xZZ  !
=>ZZ" $
xZZ% &
.ZZ& '
	PatientIdZZ' 0
,ZZ0 1
principalTable[[ &
:[[& '
$str[[( 2
,[[2 3
principalColumn\\ '
:\\' (
$str\\) 4
,\\4 5
onDelete]]  
:]]  !
ReferentialAction]]" 3
.]]3 4
Cascade]]4 ;
)]]; <
;]]< =
}^^ 
)^^ 
;^^ 
migrationBuilder`` 
.`` 
CreateIndex`` (
(``( )
nameaa 
:aa 
$straa 0
,aa0 1
tablebb 
:bb 
$strbb %
,bb% &
columncc 
:cc 
$strcc "
)cc" #
;cc# $
migrationBuilderee 
.ee 
CreateIndexee (
(ee( )
nameff 
:ff 
$strff 1
,ff1 2
tablegg 
:gg 
$strgg %
,gg% &
columnhh 
:hh 
$strhh #
)hh# $
;hh$ %
}ii 	
	protectedll 
overridell 
voidll 
Downll  $
(ll$ %
MigrationBuilderll% 5
migrationBuilderll6 F
)llF G
{mm 	
migrationBuildernn 
.nn 
	DropTablenn &
(nn& '
nameoo 
:oo 
$stroo 
)oo 
;oo  
migrationBuilderqq 
.qq 
	DropTableqq &
(qq& '
namerr 
:rr 
$strrr $
)rr$ %
;rr% &
migrationBuildertt 
.tt 
	DropTablett &
(tt& '
nameuu 
:uu 
$struu 
)uu  
;uu  !
migrationBuilderww 
.ww 
	DropTableww &
(ww& '
namexx 
:xx 
$strxx  
)xx  !
;xx! "
}yy 	
}zz 
}{{ Ç
mC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.DAL\Interfaces\IPatientRepository.cs
	namespace 	
	AmazeCare
 
. 
DAL 
. 

Interfaces "
{		 
public

 

	interface

 
IPatientRepository

 '
:

( )
IGenericRepository

* <
<

< =
Patient

= D
>

D E
{ 
} 
} ˜
mC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.DAL\Interfaces\IGenericRepository.cs
	namespace 	
	AmazeCare
 
. 
DAL 
. 

Interfaces "
{		 
public

 

	interface

 
IGenericRepository

 '
<

' (
T

( )
>

) *
where

+ 0
T

1 2
:

3 4
class

5 :
{ 
Task 
< 
IEnumerable 
< 
T 
> 
> 
GetAllAsync (
(( )
)) *
;* +
Task 
< 
T 
? 
> 
GetByIdAsync 
( 
int !
id" $
)$ %
;% &
Task 
< 
IEnumerable 
< 
T 
> 
> 
	FindAsync &
(& '

Expression' 1
<1 2
Func2 6
<6 7
T7 8
,8 9
bool: >
>> ?
>? @
	predicateA J
)J K
;K L
Task 
AddAsync 
( 
T 
entity 
) 
;  
void 
Update 
( 
T 
entity 
) 
; 
void 
Delete 
( 
T 
entity 
) 
; 
Task 
< 
int 
> 
	SaveAsync 
( 
) 
; 
} 
} Ä
lC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.DAL\Interfaces\IDoctorRepository.cs
	namespace 	
	AmazeCare
 
. 
DAL 
. 

Interfaces "
{		 
public

 

	interface

 
IDoctorRepository

 &
:

' (
IGenericRepository

) ;
<

; <
Doctor

< B
>

B C
{ 
} 
} ñ

qC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.DAL\Interfaces\IAppointmentRepository.cs
	namespace 	
	AmazeCare
 
. 
DAL 
. 

Interfaces "
{		 
public

 

	interface

 "
IAppointmentRepository

 +
:

, -
IGenericRepository

. @
<

@ A
Appointment

A L
>

L M
{ 
Task 
< 
IEnumerable 
< 
Appointment $
>$ %
>% &"
GetAllWithDetailsAsync' =
(= >
)> ?
;? @
Task 
< 
Appointment 
? 
> #
GetByIdWithDetailsAsync 2
(2 3
int3 6
id7 9
)9 :
;: ;
Task 
< 
IEnumerable 
< 
Appointment $
>$ %
>% &*
GetAppointmentsByDoctorIdAsync' E
(E F
intF I
doctorIdJ R
)R S
;S T
Task 
< 
IEnumerable 
< 
Appointment $
>$ %
>% &+
GetAppointmentsByPatientIdAsync' F
(F G
intG J
	patientIdK T
)T U
;U V
} 
} Á
kC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.DAL\Interfaces\IAdminRepository.cs
	namespace 	
	AmazeCare
 
. 
DAL 
. 

Interfaces "
{		 
public

 

	interface

 
IAdminRepository

 %
:

& '
IGenericRepository

( :
<

: ;
Admin

; @
>

@ A
{ 
} 
}  
`C:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.DAL\Entities\Patient.cs
	namespace 	
	AmazeCare
 
. 
DAL 
. 
Entities  
{		 
public

 

class

 
Patient

 
{ 
[ 	
Key	 
] 
[ 	
Range	 
( 
$num 
, 
int 
. 
MaxValue 
, 
ErrorMessage  ,
=- .
$str/ Q
)Q R
]R S
public 
int 
	PatientId 
{ 
get "
;" #
set$ '
;' (
}) *
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
[ 	
Required	 
] 
[ 	
EmailAddress	 
] 
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Required	 
] 
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 	
Required	 
] 
[ 	
DataType	 
( 
DataType 
. 
Date 
)  
]  !
public 
DateTime 
DateOfBirth #
{$ %
get& )
;) *
set+ .
;. /
}0 1
[ 	
Required	 
] 
[   	
StringLength  	 
(   
$num   
)   
]   
public!! 
string!! 
Gender!! 
{!! 
get!! "
;!!" #
set!!$ '
;!!' (
}!!) *
[## 	
Required##	 
]## 
[$$ 	
Phone$$	 
]$$ 
public%% 
string%% 
ContactNumber%% #
{%%$ %
get%%& )
;%%) *
set%%+ .
;%%. /
}%%0 1
['' 	
StringLength''	 
('' 
$num'' 
)'' 
]'' 
public(( 
string(( 
?(( "
PreviousMedicalRecords(( -
{((. /
get((0 3
;((3 4
set((5 8
;((8 9
}((: ;
public** 
ICollection** 
<** 
Appointment** &
>**& '
Appointments**( 4
{**5 6
get**7 :
;**: ;
set**< ?
;**? @
}**A B
}++ 
},, ª
_C:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.DAL\Entities\Doctor.cs
	namespace 	
	AmazeCare
 
. 
DAL 
. 
Entities  
{		 
public

 

class

 
Doctor

 
{ 
[ 	
Key	 
] 
[ 	
Range	 
( 
$num 
, 
int 
. 
MaxValue 
, 
ErrorMessage  ,
=- .
$str/ P
)P Q
]Q R
public 
int 
DoctorId 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
[ 	
Required	 
] 
[ 	
EmailAddress	 
] 
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Required	 
] 
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 	
Required	 
] 
public 
string 
	Specialty 
{  !
get" %
;% &
set' *
;* +
}, -
[ 	
Required	 
] 
public 
int 

Experience 
{ 
get  #
;# $
set% (
;( )
}* +
[!! 	
Required!!	 
]!! 
public"" 
string"" 
Qualification"" #
{""$ %
get""& )
;"") *
set""+ .
;"". /
}""0 1
[$$ 	
Required$$	 
]$$ 
public%% 
string%% 
Designation%% !
{%%" #
get%%$ '
;%%' (
set%%) ,
;%%, -
}%%. /
public'' 
ICollection'' 
<'' 
Appointment'' &
>''& '
Appointments''( 4
{''5 6
get''7 :
;'': ;
set''< ?
;''? @
}''A B
})) 
}** é
dC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.DAL\Entities\Appointment.cs
	namespace		 	
	AmazeCare		
 
.		 
DAL		 
.		 
Entities		  
{

 
public 

class 
Appointment 
{ 
[ 	
Key	 
] 
[ 	
Range	 
( 
$num 
, 
int 
. 
MaxValue 
, 
ErrorMessage  ,
=- .
$str/ U
)U V
]V W
public 
int 
AppointmentId  
{! "
get# &
;& '
set( +
;+ ,
}- .
[ 	
Required	 
] 
public 
DateTime 
AppointmentDate '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
[ 	
Required	 
] 
[ 	
RegularExpression	 
( 
$str >
,> ?
ErrorMessage 
= 
$str O
)O P
]P Q
public 
string 
Status 
{ 
get "
;" #
set$ '
;' (
}) *
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
? 
Symptoms 
{  !
get" %
;% &
set' *
;* +
}, -
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
? 
ConsultingDetails (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
[ 	
StringLength	 
( 
$num 
) 
] 
public   
string   
?   
Prescriptions   $
{  % &
get  ' *
;  * +
set  , /
;  / 0
}  1 2
["" 	
StringLength""	 
("" 
$num"" 
)"" 
]"" 
public## 
string## 
?## 
RecommendedTests## '
{##( )
get##* -
;##- .
set##/ 2
;##2 3
}##4 5
[%% 	
Required%%	 
]%% 
[&& 	

ForeignKey&&	 
(&& 
$str&& 
)&&  
]&&  !
public'' 
int'' 
	PatientId'' 
{'' 
get'' "
;''" #
set''$ '
;''' (
}'') *
public(( 
Patient(( 
Patient(( 
{((  
get((! $
;(($ %
set((& )
;(() *
}((+ ,
[** 	
Required**	 
]** 
[++ 	

ForeignKey++	 
(++ 
$str++ 
)++ 
]++  
public,, 
int,, 
DoctorId,, 
{,, 
get,, !
;,,! "
set,,# &
;,,& '
},,( )
public-- 
Doctor-- 
Doctor-- 
{-- 
get-- "
;--" #
set--$ '
;--' (
}--) *
}.. 
}// ƒ
^C:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.DAL\Entities\Admin.cs
	namespace 	
	AmazeCare
 
. 
DAL 
. 
Entities  
{		 
public

 

class

 
Admin

 
{ 
[ 	
Key	 
] 
[ 	
Range	 
( 
$num 
, 
int 
. 
MaxValue 
, 
ErrorMessage  ,
=- .
$str/ O
)O P
]P Q
public 
int 
AdminId 
{ 
get  
;  !
set" %
;% &
}' (
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
[ 	
Required	 
] 
[ 	
EmailAddress	 
] 
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Required	 
] 
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} ð
jC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.DAL\Context\AmazeCareDbContext.cs
	namespace		 	
	AmazeCare		
 
.		 
DAL		 
.		 
Context		 
{

 
public 

class 
AmazeCareDbContext #
:$ %
	DbContext& /
{ 
public 
AmazeCareDbContext !
(! "
DbContextOptions" 2
<2 3
AmazeCareDbContext3 E
>E F
optionsG N
)N O
: 
base 
( 
options 
) 
{ 	
} 	
public 
DbSet 
< 
Patient 
> 
Patients &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
DbSet 
< 
Doctor 
> 
Doctors $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DbSet 
< 
Appointment  
>  !
Appointments" .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
public 
DbSet 
< 
Admin 
> 
Admins "
{# $
get% (
;( )
set* -
;- .
}/ 0
} 
} —
VC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.DAL\Class1.cs
	namespace 	
	AmazeCare
 
. 
DAL 
{ 
public 

class 
Class1 
{ 
} 
} 