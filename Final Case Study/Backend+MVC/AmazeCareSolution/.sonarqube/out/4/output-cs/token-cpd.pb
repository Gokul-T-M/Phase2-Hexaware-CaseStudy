·W
WC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.API\Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder 
. 
Services 
. 
AddControllers 
(  
)  !
;! "
builder 
. 
Services 
. #
AddEndpointsApiExplorer (
(( )
)) *
;* +
builder 
. 
Services 
. 
AddSwaggerGen 
( 
c  
=>! #
{ 
c 
. 

SwaggerDoc 
( 
$str 
, 
new 
	Microsoft $
.$ %
OpenApi% ,
., -
Models- 3
.3 4
OpenApiInfo4 ?
{ 
Title 
= 
$str 
,  
Version 
= 
$str 
} 
) 
; 
c 
. !
AddSecurityDefinition 
( 
$str $
,$ %
new& )
	Microsoft* 3
.3 4
OpenApi4 ;
.; <
Models< B
.B C!
OpenApiSecuritySchemeC X
{   
Name!! 
=!! 
$str!! 
,!! 
Type"" 
="" 
	Microsoft"" 
."" 
OpenApi""  
.""  !
Models""! '
.""' (
SecuritySchemeType""( :
."": ;
ApiKey""; A
,""A B
Scheme## 
=## 
$str## 
,## 
BearerFormat$$ 
=$$ 
$str$$ 
,$$ 
In%% 

=%% 
	Microsoft%% 
.%% 
OpenApi%% 
.%% 
Models%% %
.%%% &
ParameterLocation%%& 7
.%%7 8
Header%%8 >
,%%> ?
Description&& 
=&& 
$str&& |
}'' 
)'' 
;'' 
c)) 
.)) "
AddSecurityRequirement)) 
()) 
new))  
	Microsoft))! *
.))* +
OpenApi))+ 2
.))2 3
Models))3 9
.))9 :&
OpenApiSecurityRequirement)): T
{** 
{++ 	
new,, 
	Microsoft,, 
.,, 
OpenApi,, !
.,,! "
Models,," (
.,,( )!
OpenApiSecurityScheme,,) >
{-- 
	Reference.. 
=.. 
new.. 
	Microsoft..  )
...) *
OpenApi..* 1
...1 2
Models..2 8
...8 9
OpenApiReference..9 I
{// 
Type00 
=00 
	Microsoft00 $
.00$ %
OpenApi00% ,
.00, -
Models00- 3
.003 4
ReferenceType004 A
.00A B
SecurityScheme00B P
,00P Q
Id11 
=11 
$str11 !
}22 
}33 
,33 
new44 
string44 
[44 
]44 
{44 
}44 
}55 	
}66 
)66 
;66 
}77 
)77 
;77 
builder:: 
.:: 
Services:: 
.:: 
AddApiVersioning:: !
(::! "
options::" )
=>::* ,
{;; 
options<< 
.<< 
DefaultApiVersion<< 
=<< 
new<<  #

ApiVersion<<$ .
(<<. /
$num<</ 0
,<<0 1
$num<<2 3
)<<3 4
;<<4 5
options== 
.== /
#AssumeDefaultVersionWhenUnspecified== /
===0 1
true==2 6
;==6 7
options>> 
.>> 
ReportApiVersions>> 
=>> 
true>>  $
;>>$ %
}?? 
)?? 
;?? 
builderDD 
.DD 
ServicesDD 
.DD 
AddDbContextDD 
<DD 
AmazeCareDbContextDD 0
>DD0 1
(DD1 2
optionsDD2 9
=>DD: <
optionsEE 
.EE 
UseSqlServerEE 
(EE 
builderEE  
.EE  !
ConfigurationEE! .
.EE. /
GetConnectionStringEE/ B
(EEB C
$strEEC P
)EEP Q
)EEQ R
)EER S
;EES T
builderJJ 
.JJ 
ServicesJJ 
.JJ 
	AddScopedJJ 
<JJ 
IPatientRepositoryJJ -
,JJ- .
PatientRepositoryJJ/ @
>JJ@ A
(JJA B
)JJB C
;JJC D
builderKK 
.KK 
ServicesKK 
.KK 
	AddScopedKK 
<KK 
IDoctorRepositoryKK ,
,KK, -
DoctorRepositoryKK. >
>KK> ?
(KK? @
)KK@ A
;KKA B
builderLL 
.LL 
ServicesLL 
.LL 
	AddScopedLL 
<LL "
IAppointmentRepositoryLL 1
,LL1 2!
AppointmentRepositoryLL3 H
>LLH I
(LLI J
)LLJ K
;LLK L
builderMM 
.MM 
ServicesMM 
.MM 
	AddScopedMM 
<MM 
IAdminRepositoryMM +
,MM+ ,
AdminRepositoryMM- <
>MM< =
(MM= >
)MM> ?
;MM? @
builderNN 
.NN 
ServicesNN 
.NN 
	AddScopedNN 
(NN 
typeofNN !
(NN! "
IGenericRepositoryNN" 4
<NN4 5
>NN5 6
)NN6 7
,NN7 8
typeofNN9 ?
(NN? @
GenericRepositoryNN@ Q
<NNQ R
>NNR S
)NNS T
)NNT U
;NNU V
builderQQ 
.QQ 
ServicesQQ 
.QQ 
	AddScopedQQ 
<QQ 
IPatientServiceQQ *
,QQ* +
PatientServiceQQ, :
>QQ: ;
(QQ; <
)QQ< =
;QQ= >
builderRR 
.RR 
ServicesRR 
.RR 
	AddScopedRR 
<RR 
IDoctorServiceRR )
,RR) *
DoctorServiceRR+ 8
>RR8 9
(RR9 :
)RR: ;
;RR; <
builderSS 
.SS 
ServicesSS 
.SS 
	AddScopedSS 
<SS 
IAppointmentServiceSS .
,SS. /
AppointmentServiceSS0 B
>SSB C
(SSC D
)SSD E
;SSE F
builderTT 
.TT 
ServicesTT 
.TT 
	AddScopedTT 
<TT 
IAdminServiceTT (
,TT( )
AdminServiceTT* 6
>TT6 7
(TT7 8
)TT8 9
;TT9 :
varYY 
configurationYY 
=YY 
builderYY 
.YY 
ConfigurationYY )
;YY) *
varZZ 
keyZZ 
=ZZ 	
EncodingZZ
 
.ZZ 
UTF8ZZ 
.ZZ 
GetBytesZZ  
(ZZ  !
configurationZZ! .
[ZZ. /
$strZZ/ @
]ZZ@ A
)ZZA B
;ZZB C
builder^^ 
.^^ 
Services^^ 
.^^ 
AddAuthentication^^ "
(^^" #
options^^# *
=>^^+ -
{__ 
options`` 
.`` %
DefaultAuthenticateScheme`` %
=``& '
JwtBearerDefaults``( 9
.``9 : 
AuthenticationScheme``: N
;``N O
optionsaa 
.aa "
DefaultChallengeSchemeaa "
=aa# $
JwtBearerDefaultsaa% 6
.aa6 7 
AuthenticationSchemeaa7 K
;aaK L
}bb 
)bb 
.cc 
AddJwtBearercc 
(cc 
optcc 
=>cc 
{dd 
optff 
.ff  
RequireHttpsMetadataff 
=ff 
falseff $
;ff$ %
opthh 
.hh %
TokenValidationParametershh !
=hh" #
newhh$ '%
TokenValidationParametershh( A
{ii 
ValidateIssuerjj 
=jj 
truejj 
,jj 
ValidateAudiencekk 
=kk 
truekk 
,kk  
ValidateLifetimell 
=ll 
truell 
,ll  $
ValidateIssuerSigningKeymm  
=mm! "
truemm# '
,mm' (
ValidIssueroo 
=oo 
configurationoo #
[oo# $
$stroo$ 8
]oo8 9
,oo9 :
ValidAudiencepp 
=pp 
configurationpp %
[pp% &
$strpp& <
]pp< =
,pp= >
IssuerSigningKeyqq 
=qq 
newqq  
SymmetricSecurityKeyqq 3
(qq3 4
keyqq4 7
)qq7 8
}rr 
;rr 
}ss 
)ss 
;ss 
builderuu 
.uu 
Servicesuu 
.uu 
AddAuthorizationuu !
(uu! "
)uu" #
;uu# $
builderxx 
.xx 
Servicesxx 
.xx 
AddCorsxx 
(xx 
optionsxx  
=>xx! #
{yy 
optionszz 
.zz 
	AddPolicyzz 
(zz 
$strzz  
,zz  !
policyzz" (
=>zz) +
{{{ 
policy|| 
.|| 
AllowAnyOrigin|| 
(|| 
)|| 
.}} 
AllowAnyMethod}} 
(}} 
)}} 
.~~ 
AllowAnyHeader~~ 
(~~ 
)~~ 
. 
WithExposedHeaders !
(! "
$str" 1
)1 2
;2 3
}
ÅÅ 
)
ÅÅ 
;
ÅÅ 
}ÇÇ 
)
ÇÇ 
;
ÇÇ 
varÑÑ 
app
ÑÑ 
=
ÑÑ 	
builder
ÑÑ
 
.
ÑÑ 
Build
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
appää 
.
ää 

UseRouting
ää 
(
ää 
)
ää 
;
ää 
iféé 
(
éé 
app
éé 
.
éé 
Environment
éé 
.
éé 
IsDevelopment
éé !
(
éé! "
)
éé" #
)
éé# $
{èè 
app
êê 
.
êê 

UseSwagger
êê 
(
êê 
)
êê 
;
êê 
app
ëë 
.
ëë 
UseSwaggerUI
ëë 
(
ëë 
)
ëë 
;
ëë 
}íí 
appòò 
.
òò 
UseCors
òò 
(
òò 
$str
òò 
)
òò 
;
òò 
appõõ 
.
õõ 
UseAuthentication
õõ 
(
õõ 
)
õõ 
;
õõ 
appúú 
.
úú 
UseAuthorization
úú 
(
úú 
)
úú 
;
úú 
appûû 
.
ûû 
MapControllers
ûû 
(
ûû 
)
ûû 
;
ûû 
app†† 
.
†† 
Run
†† 
(
†† 
)
†† 	
;
††	 
´
qC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.API\DTOs\PatientDTOs\PatientUpdateDTO.cs
	namespace 	
	AmazeCare
 
. 
API 
. 
DTOs 
. 
PatientDTOs (
{ 
public 

class 
PatientUpdateDTO !
{ 
[ 	
Required	 
] 
public 
int 
	PatientId 
{ 
get "
;" #
set$ '
;' (
}) *
[

 	
Required

	 
]

 
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
[ 	
EmailAddress	 
] 
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 	
Required	 
] 
[ 	
Phone	 
] 
public 
string 
ContactNumber #
{$ %
get& )
;) *
set+ .
;. /
}0 1
[ 	
Required	 
] 
public 
DateTime 
DateOfBirth #
{$ %
get& )
;) *
set+ .
;. /
}0 1
[ 	
Required	 
] 
[ 	
RegularExpression	 
( 
$str .
). /
]/ 0
public 
string 
Gender 
{ 
get "
;" #
set$ '
;' (
}) *
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
? "
PreviousMedicalRecords -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
}   
}!! Ü
sC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.API\DTOs\PatientDTOs\PatientResponseDTO.cs
	namespace 	
	AmazeCare
 
. 
API 
. 
DTOs 
. 
PatientDTOs (
{ 
public 

class 
PatientResponseDTO #
{ 
public 
int 
	PatientId 
{ 
get "
;" #
set$ '
;' (
}) *
[		 	
Required			 
]		 
public

 
string

 
Name

 
{

 
get

  
;

  !
set

" %
;

% &
}

' (
[ 	
EmailAddress	 
] 
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Phone	 
] 
public 
string 
ContactNumber #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
DateTime 
DateOfBirth #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
Gender 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
? "
PreviousMedicalRecords -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
} 
} ã
qC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.API\DTOs\PatientDTOs\PatientCreateDTO.cs
	namespace 	
	AmazeCare
 
. 
API 
. 
DTOs 
. 
PatientDTOs (
{ 
public 

class 
PatientCreateDTO !
{ 
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
, 
ErrorMessage '
=( )
$str* U
)U V
]V W
public		 
string		 
Name		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
[ 	
Required	 
] 
[ 	
EmailAddress	 
( 
ErrorMessage "
=# $
$str% <
)< =
]= >
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Required	 
] 
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 	
Required	 
] 
[ 	
Phone	 
( 
ErrorMessage 
= 
$str 7
)7 8
]8 9
public 
string 
ContactNumber #
{$ %
get& )
;) *
set+ .
;. /
}0 1
[ 	
Required	 
] 
public 
DateTime 
DateOfBirth #
{$ %
get& )
;) *
set+ .
;. /
}0 1
[ 	
Required	 
] 
[ 	
RegularExpression	 
( 
$str .
,. /
ErrorMessage0 <
== >
$str? f
)f g
]g h
public 
string 
Gender 
{ 
get "
;" #
set$ '
;' (
}) *
[ 	
StringLength	 
( 
$num 
) 
] 
public   
string   
?   "
PreviousMedicalRecords   -
{  . /
get  0 3
;  3 4
set  5 8
;  8 9
}  : ;
}!! 
}"" °
oC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.API\DTOs\DoctorDTOs\DoctorUpdateDTO.cs
	namespace 	
	AmazeCare
 
. 
API 
. 
DTOs 
. 

DoctorDTOs '
{ 
public 

class 
DoctorUpdateDTO  
{ 
[ 	
Required	 
] 
public 
int 
DoctorId 
{ 
get !
;! "
set# &
;& '
}( )
[

 	
Required

	 
]

 
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
[ 	
Required	 
] 
[ 	
EmailAddress	 
] 
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Required	 
] 
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 	
Required	 
] 
public 
string 
	Specialty 
{  !
get" %
;% &
set' *
;* +
}, -
[ 	
Required	 
] 
[ 	
Range	 
( 
$num 
, 
$num 
) 
] 
public 
int 

Experience 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	
Required	 
] 
public 
string 
Qualification #
{$ %
get& )
;) *
set+ .
;. /
}0 1
[   	
Required  	 
]   
public!! 
string!! 
Designation!! !
{!!" #
get!!$ '
;!!' (
set!!) ,
;!!, -
}!!. /
}"" 
}## «
qC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.API\DTOs\DoctorDTOs\DoctorResponseDTO.cs
	namespace 	
	AmazeCare
 
. 
API 
. 
DTOs 
. 

DoctorDTOs '
{ 
public 

class 
DoctorResponseDTO "
{ 
public 
int 
DoctorId 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public		 
string		 
Email		 
{		 
get		 !
;		! "
set		# &
;		& '
}		( )
public 
string 
	Specialty 
{  !
get" %
;% &
set' *
;* +
}, -
public 
int 

Experience 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
Qualification #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
Designation !
{" #
get$ '
;' (
set) ,
;, -
}. /
} 
} ‘
oC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.API\DTOs\DoctorDTOs\DoctorCreateDTO.cs
	namespace 	
	AmazeCare
 
. 
API 
. 
DTOs 
. 

DoctorDTOs '
{ 
public 

class 
DoctorCreateDTO  
{ 
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
) 
] 
public		 
string		 
Name		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
[ 	
Required	 
] 
[ 	
EmailAddress	 
] 
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Required	 
] 
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 	
Required	 
] 
public 
string 
	Specialty 
{  !
get" %
;% &
set' *
;* +
}, -
[ 	
Required	 
] 
[ 	
Range	 
( 
$num 
, 
$num 
) 
] 
public 
int 

Experience 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	
Required	 
] 
public 
string 
Qualification #
{$ %
get& )
;) *
set+ .
;. /
}0 1
[ 	
Required	 
] 
public 
string 
Designation !
{" #
get$ '
;' (
set) ,
;, -
}. /
} 
}   Ï
pC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.API\DTOs\AuthDTOs\RegisterPatientDTO.cs
	namespace 	
	AmazeCare
 
. 
API 
. 
DTOs 
. 
AuthDTOs %
{ 
public 

class 
RegisterPatientDTO #
{ 
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
) 
] 
public		 
string		 
Name		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
[ 	
Required	 
] 
[ 	
EmailAddress	 
] 
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Required	 
] 
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 	
Required	 
] 
[ 	
Phone	 
] 
public 
string 
ContactNumber #
{$ %
get& )
;) *
set+ .
;. /
}0 1
[ 	
Required	 
] 
public 
DateTime 
DateOfBirth #
{$ %
get& )
;) *
set+ .
;. /
}0 1
[ 	
Required	 
] 
[ 	
RegularExpression	 
( 
$str .
,. /
ErrorMessage0 <
== >
$str? f
)f g
]g h
public 
string 
Gender 
{ 
get "
;" #
set$ '
;' (
}) *
} 
}   ÷
oC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.API\DTOs\AuthDTOs\RegisterDoctorDTO.cs
	namespace 	
	AmazeCare
 
. 
API 
. 
DTOs 
. 
AuthDTOs %
{ 
public 

class 
RegisterDoctorDTO "
{ 
[ 	
Required	 
] 
[		 	
StringLength			 
(		 
$num		 
)		 
]		 
public

 
string

 
Name

 
{

 
get

  
;

  !
set

" %
;

% &
}

' (
[ 	
Required	 
] 
[ 	
EmailAddress	 
] 
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Required	 
] 
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
	Specialty 
{  !
get" %
;% &
set' *
;* +
}, -
[ 	
Required	 
] 
[ 	
Range	 
( 
$num 
, 
$num 
, 
ErrorMessage "
=# $
$str% Q
)Q R
]R S
public 
int 

Experience 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
Qualification #
{$ %
get& )
;) *
set+ .
;. /
}0 1
[   	
Required  	 
]   
[!! 	
StringLength!!	 
(!! 
$num!! 
)!! 
]!! 
public"" 
string"" 
Designation"" !
{""" #
get""$ '
;""' (
set"") ,
;"", -
}"". /
}## 
}$$ à	
nC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.API\DTOs\AuthDTOs\RegisterAdminDTO.cs
	namespace 	
	AmazeCare
 
. 
API 
. 
DTOs 
. 
AuthDTOs %
{ 
public 

class 
RegisterAdminDTO !
{ 
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
) 
] 
public		 
string		 
Name		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
[ 	
Required	 
] 
[ 	
EmailAddress	 
] 
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Required	 
] 
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} ﬁ
mC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.API\DTOs\AuthDTOs\LoginRequestDTO.cs
	namespace 	
	AmazeCare
 
. 
API 
. 
DTOs 
. 
	AuthDTO_s &
{ 
public 

class 
LoginRequestDTO  
{ 
[ 	
Required	 
( 
ErrorMessage 
=  
$str! 4
)4 5
]5 6
[ 	
EmailAddress	 
( 
ErrorMessage "
=# $
$str% B
)B C
]C D
public		 
string		 
Email		 
{		 
get		 !
;		! "
set		# &
;		& '
}		( )
[ 	
Required	 
( 
ErrorMessage 
=  
$str! 7
)7 8
]8 9
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} Ω
yC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.API\DTOs\AppointmentDTOs\AppointmentUpdateDTO.cs
	namespace 	
	AmazeCare
 
. 
API 
. 
DTOs 
. 
AppointmentDTOs ,
{ 
public 

class  
AppointmentUpdateDTO %
{ 
[ 	
Required	 
] 
public 
int 
AppointmentId  
{! "
get# &
;& '
set( +
;+ ,
}- .
[

 	
Required

	 
]

 
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
ConsultingDetails '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
Prescriptions #
{$ %
get& )
;) *
set+ .
;. /
}0 1
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
RecommendedTests &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
} 
} ô
{C:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.API\DTOs\AppointmentDTOs\AppointmentResponseDTO.cs
	namespace 	
	AmazeCare
 
. 
API 
. 
DTOs 
. 
AppointmentDTOs ,
{ 
public 

class "
AppointmentResponseDTO '
{ 
public 
int 
AppointmentId  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
PatientName !
{" #
get$ '
;' (
set) ,
;, -
}. /
public		 
int		 
	PatientId		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
public

 
string

 

DoctorName

  
{

! "
get

# &
;

& '
set

( +
;

+ ,
}

- .
public 
int 
DoctorId 
{ 
get !
;! "
set# &
;& '
}( )
public 
DateTime 
AppointmentDate '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
string 
Symptoms 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Status 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
? 
ConsultingDetails (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
string 
? 
Prescriptions $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
string 
? 
RecommendedTests '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
} 
} Û
yC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.API\DTOs\AppointmentDTOs\AppointmentCreateDTO.cs
	namespace 	
	AmazeCare
 
. 
API 
. 
DTOs 
. 
AppointmentDTOs ,
{ 
public 

class  
AppointmentCreateDTO %
{ 
[ 	
Required	 
] 
public 
int 
DoctorId 
{ 
get !
;! "
set# &
;& '
}( )
[

 	
Required

	 
]

 
public 
DateTime 
AppointmentDate '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
Symptoms 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} “

mC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.API\DTOs\AdminDTOs\AdminUpdateDTO.cs
	namespace 	
	AmazeCare
 
. 
API 
. 
DTOs 
. 
	AdminDTOs &
{ 
public 

class 
AdminUpdateDTO 
{ 
[ 	
Required	 
] 
public 
int 
AdminId 
{ 
get  
;  !
set" %
;% &
}' (
[

 	
Required

	 
]

 
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
[ 	
Required	 
] 
[ 	
EmailAddress	 
] 
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Required	 
] 
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
}  
oC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.API\DTOs\AdminDTOs\AdminResponseDTO.cs
	namespace 	
	AmazeCare
 
. 
API 
. 
DTOs 
. 
	AdminDTOs &
{ 
public 

class 
AdminResponseDTO !
{ 
public 
int 
AdminId 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public		 
string		 
Email		 
{		 
get		 !
;		! "
set		# &
;		& '
}		( )
}

 
} Ü	
mC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.API\DTOs\AdminDTOs\AdminCreateDTO.cs
	namespace 	
	AmazeCare
 
. 
API 
. 
DTOs 
. 
	AdminDTOs &
{ 
public 

class 
AdminCreateDTO 
{ 
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
) 
] 
public		 
string		 
Name		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
[ 	
Required	 
] 
[ 	
EmailAddress	 
] 
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Required	 
] 
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} ¥P
mC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.API\Controllers\PatientController.cs
[		 
ApiController		 
]		 
[

 

ApiVersion

 
(

 
$str

 
)

 
]

 
[ 
Route 
( 
$str +
)+ ,
], -
[ 
	Authorize 

]
 
public 
class 
PatientController 
:  
ControllerBase! /
{ 
private 
readonly 
IPatientService $
_patientService% 4
;4 5
public 

PatientController 
( 
IPatientService ,
patientService- ;
); <
{ 
_patientService 
= 
patientService (
;( )
} 
[ 
HttpGet 
] 
[ 
	Authorize 
( 
Roles 
= 
$str %
)% &
]& '
public 

async 
Task 
< 
IActionResult #
># $
GetAll% +
(+ ,
), -
{ 
var 
patients 
= 
await 
_patientService ,
., -
GetAllPatientsAsync- @
(@ A
)A B
;B C
var 
result 
= 
patients 
. 
Select $
($ %
p% &
=>' )
new* -
PatientResponseDTO. @
{ 	
	PatientId 
= 
p 
. 
	PatientId #
,# $
Name   
=   
p   
.   
Name   
,   
Email!! 
=!! 
p!! 
.!! 
Email!! 
,!! 
ContactNumber"" 
="" 
p"" 
."" 
ContactNumber"" +
,""+ ,
DateOfBirth## 
=## 
p## 
.## 
DateOfBirth## '
,##' (
Gender$$ 
=$$ 
p$$ 
.$$ 
Gender$$ 
,$$ "
PreviousMedicalRecords%% "
=%%# $
p%%% &
.%%& '"
PreviousMedicalRecords%%' =
}&& 	
)&&	 

;&&
 
return(( 
Ok(( 
((( 
result(( 
)(( 
;(( 
})) 
[,, 
HttpGet,, 
(,, 
$str,, 
),, 
],, 
[-- 
	Authorize-- 
(-- 
Roles-- 
=-- 
$str-- -
)--- .
]--. /
public.. 

async.. 
Task.. 
<.. 
IActionResult.. #
>..# $
Get..% (
(..( )
int..) ,
id..- /
)../ 0
{// 
if00 

(00 
User00 
.00 
IsInRole00 
(00 
$str00 #
)00# $
)00$ %
{11 	
var22 
userId22 
=22 
int22 
.22 
Parse22 "
(22" #
User22# '
.22' (
	FindFirst22( 1
(221 2

ClaimTypes222 <
.22< =
NameIdentifier22= K
)22K L
?22L M
.22M N
Value22N S
!22S T
)22T U
;22U V
if33 
(33 
id33 
!=33 
userId33 
)33 
return33 $
Forbid33% +
(33+ ,
)33, -
;33- .
}44 	
var66 
patient66 
=66 
await66 
_patientService66 +
.66+ ,
GetPatientByIdAsync66, ?
(66? @
id66@ B
)66B C
;66C D
if77 

(77 
patient77 
==77 
null77 
)77 
return77 #
NotFound77$ ,
(77, -
)77- .
;77. /
var99 
result99 
=99 
new99 
PatientResponseDTO99 +
{:: 	
	PatientId;; 
=;; 
patient;; 
.;;  
	PatientId;;  )
,;;) *
Name<< 
=<< 
patient<< 
.<< 
Name<< 
,<<  
Email== 
=== 
patient== 
.== 
Email== !
,==! "
ContactNumber>> 
=>> 
patient>> #
.>># $
ContactNumber>>$ 1
,>>1 2
DateOfBirth?? 
=?? 
patient?? !
.??! "
DateOfBirth??" -
,??- .
Gender@@ 
=@@ 
patient@@ 
.@@ 
Gender@@ #
,@@# $"
PreviousMedicalRecordsAA "
=AA# $
patientAA% ,
.AA, -"
PreviousMedicalRecordsAA- C
}BB 	
;BB	 

returnDD 
OkDD 
(DD 
resultDD 
)DD 
;DD 
}EE 
[HH 
HttpPostHH 
]HH 
[II 
AllowAnonymousII 
]II 
publicJJ 

asyncJJ 
TaskJJ 
<JJ 
IActionResultJJ #
>JJ# $
CreateJJ% +
(JJ+ ,
[JJ, -
FromBodyJJ- 5
]JJ5 6
PatientCreateDTOJJ7 G
dtoJJH K
)JJK L
{KK 
varLL 
patientLL 
=LL 
newLL 
PatientLL !
{MM 	
NameNN 
=NN 
dtoNN 
.NN 
NameNN 
,NN 
EmailOO 
=OO 
dtoOO 
.OO 
EmailOO 
,OO 
PasswordPP 
=PP 
dtoPP 
.PP 
PasswordPP #
,PP# $
ContactNumberQQ 
=QQ 
dtoQQ 
.QQ  
ContactNumberQQ  -
,QQ- .
DateOfBirthRR 
=RR 
dtoRR 
.RR 
DateOfBirthRR )
,RR) *
GenderSS 
=SS 
dtoSS 
.SS 
GenderSS 
,SS  "
PreviousMedicalRecordsTT "
=TT# $
dtoTT% (
.TT( )"
PreviousMedicalRecordsTT) ?
}VV 	
;VV	 

awaitXX 
_patientServiceXX 
.XX 
AddPatientAsyncXX -
(XX- .
patientXX. 5
)XX5 6
;XX6 7
returnYY 
OkYY 
(YY 
$strYY 3
)YY3 4
;YY4 5
}ZZ 
[]] 
HttpPut]] 
(]] 
$str]] 
)]] 
]]] 
[^^ 
	Authorize^^ 
(^^ 
Roles^^ 
=^^ 
$str^^ &
)^^& '
]^^' (
public__ 

async__ 
Task__ 
<__ 
IActionResult__ #
>__# $
Update__% +
(__+ ,
int__, /
id__0 2
,__2 3
[__4 5
FromBody__5 =
]__= >
PatientUpdateDTO__? O
dto__P S
)__S T
{`` 
varaa 
userIdaa 
=aa 
intaa 
.aa 
Parseaa 
(aa 
Useraa #
.aa# $
	FindFirstaa$ -
(aa- .

ClaimTypesaa. 8
.aa8 9
NameIdentifieraa9 G
)aaG H
?aaH I
.aaI J
ValueaaJ O
!aaO P
)aaP Q
;aaQ R
ifbb 

(bb 
(bb 

ClaimTypesbb 
.bb 
NameIdentifierbb &
==bb' )
$strbb* 3
&&bb4 6
idbb7 9
!=bb: <
userIdbb= C
)bbC D
||bbE G
idbbH J
!=bbK M
dtobbN Q
.bbQ R
	PatientIdbbR [
)bb[ \
returncc 
Forbidcc 
(cc 
)cc 
;cc 
varff 
updatedff 
=ff 
newff 
Patientff !
{gg 	
	PatientIdhh 
=hh 
dtohh 
.hh 
	PatientIdhh %
,hh% &
Nameii 
=ii 
dtoii 
.ii 
Nameii 
,ii 
Emailjj 
=jj 
dtojj 
.jj 
Emailjj 
,jj 
Passwordkk 
=kk 
dtokk 
.kk 
Passwordkk #
,kk# $
ContactNumberll 
=ll 
dtoll 
.ll  
ContactNumberll  -
,ll- .
DateOfBirthmm 
=mm 
dtomm 
.mm 
DateOfBirthmm )
,mm) *
Gendernn 
=nn 
dtonn 
.nn 
Gendernn 
,nn  "
PreviousMedicalRecordsoo "
=oo# $
(oo% &
dtooo& )
.oo) *"
PreviousMedicalRecordsoo* @
==ooA C
$strooD F
)ooF G
?ooH I
nullooJ N
:ooO P
dtoooQ T
.ooT U"
PreviousMedicalRecordsooU k
}pp 	
;pp	 

awaitrr 
_patientServicerr 
.rr 
UpdatePatientAsyncrr 0
(rr0 1
updatedrr1 8
)rr8 9
;rr9 :
returnss 
Okss 
(ss 
$strss #
)ss# $
;ss$ %
}tt 
[ww 

HttpDeleteww 
(ww 
$strww 
)ww 
]ww 
[xx 
	Authorizexx 
(xx 
Rolesxx 
=xx 
$strxx 
)xx 
]xx  
publicyy 

asyncyy 
Taskyy 
<yy 
IActionResultyy #
>yy# $
Deleteyy% +
(yy+ ,
intyy, /
idyy0 2
)yy2 3
{zz 
await{{ 
_patientService{{ 
.{{ 
DeletePatientAsync{{ 0
({{0 1
id{{1 3
){{3 4
;{{4 5
return|| 
Ok|| 
(|| 
$str|| #
)||# $
;||$ %
}}} 
}~~ ÌP
lC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.API\Controllers\DoctorController.cs
[ 
ApiController 
] 
[		 

ApiVersion		 
(		 
$str		 
)		 
]		 
[

 
Route

 
(

 
$str

 *
)

* +
]

+ ,
[ 
	Authorize 

(
 
Roles 
= 
$str !
)! "
]" #
public 
class 
DoctorController 
: 
ControllerBase  .
{ 
private 
readonly 
IDoctorService #
_doctorService$ 2
;2 3
public 

DoctorController 
( 
IDoctorService *
doctorService+ 8
)8 9
{ 
_doctorService 
= 
doctorService &
;& '
} 
[ 
HttpGet 
] 
[ 
AllowAnonymous 
] 
public 

async 
Task 
< 
IActionResult #
># $
GetAll% +
(+ ,
), -
{ 
var 
doctors 
= 
await 
_doctorService *
.* +
GetAllDoctorsAsync+ =
(= >
)> ?
;? @
var 
result 
= 
doctors 
. 
Select #
(# $
d$ %
=>& (
new) ,
DoctorResponseDTO- >
{ 	
DoctorId 
= 
d 
. 
DoctorId !
,! "
Name 
= 
d 
. 
Name 
, 
Email   
=   
d   
.   
Email   
,   
	Specialty!! 
=!! 
d!! 
.!! 
	Specialty!! #
,!!# $

Experience"" 
="" 
d"" 
."" 

Experience"" %
,""% &
Qualification## 
=## 
d## 
.## 
Qualification## +
,##+ ,
Designation$$ 
=$$ 
d$$ 
.$$ 
Designation$$ '
}%% 	
)%%	 

;%%
 
return'' 
Ok'' 
('' 
result'' 
)'' 
;'' 
}(( 
[++ 
HttpGet++ 
(++ 
$str++ 
)++ 
]++ 
public,, 

async,, 
Task,, 
<,, 
IActionResult,, #
>,,# $
Get,,% (
(,,( )
int,,) ,
id,,- /
),,/ 0
{-- 
if.. 

(.. 
User.. 
... 
IsInRole.. 
(.. 
$str.. "
).." #
)..# $
{// 	
var00 
userId00 
=00 
int00 
.00 
Parse00 "
(00" #
User00# '
.00' (
	FindFirst00( 1
(001 2

ClaimTypes002 <
.00< =
NameIdentifier00= K
)00K L
?00L M
.00M N
Value00N S
!00S T
)00T U
;00U V
if11 
(11 
id11 
!=11 
userId11 
)11 
return11 $
Forbid11% +
(11+ ,
)11, -
;11- .
}22 	
var44 
doctor44 
=44 
await44 
_doctorService44 )
.44) *
GetDoctorByIdAsync44* <
(44< =
id44= ?
)44? @
;44@ A
if55 

(55 
doctor55 
==55 
null55 
)55 
return55 "
NotFound55# +
(55+ ,
)55, -
;55- .
var77 
result77 
=77 
new77 
DoctorResponseDTO77 *
{88 	
DoctorId99 
=99 
doctor99 
.99 
DoctorId99 &
,99& '
Name:: 
=:: 
doctor:: 
.:: 
Name:: 
,:: 
Email;; 
=;; 
doctor;; 
.;; 
Email;;  
,;;  !
	Specialty<< 
=<< 
doctor<< 
.<< 
	Specialty<< (
,<<( )

Experience== 
=== 
doctor== 
.==  

Experience==  *
,==* +
Qualification>> 
=>> 
doctor>> "
.>>" #
Qualification>># 0
,>>0 1
Designation?? 
=?? 
doctor??  
.??  !
Designation??! ,
}@@ 	
;@@	 

returnBB 
OkBB 
(BB 
resultBB 
)BB 
;BB 
}CC 
[FF 
HttpPostFF 
]FF 
[GG 
	AuthorizeGG 
(GG 
RolesGG 
=GG 
$strGG 
)GG 
]GG  
publicHH 

asyncHH 
TaskHH 
<HH 
IActionResultHH #
>HH# $
CreateHH% +
(HH+ ,
[HH, -
FromBodyHH- 5
]HH5 6
DoctorCreateDTOHH7 F
dtoHHG J
)HHJ K
{II 
varJJ 
doctorJJ 
=JJ 
newJJ 
DoctorJJ 
{KK 	
NameLL 
=LL 
dtoLL 
.LL 
NameLL 
,LL 
EmailMM 
=MM 
dtoMM 
.MM 
EmailMM 
,MM 
PasswordNN 
=NN 
dtoNN 
.NN 
PasswordNN #
,NN# $
	SpecialtyOO 
=OO 
dtoOO 
.OO 
	SpecialtyOO %
,OO% &

ExperiencePP 
=PP 
dtoPP 
.PP 

ExperiencePP '
,PP' (
QualificationQQ 
=QQ 
dtoQQ 
.QQ  
QualificationQQ  -
,QQ- .
DesignationRR 
=RR 
dtoRR 
.RR 
DesignationRR )
}SS 	
;SS	 

awaitUU 
_doctorServiceUU 
.UU 
AddDoctorAsyncUU +
(UU+ ,
doctorUU, 2
)UU2 3
;UU3 4
returnVV 
OkVV 
(VV 
$strVV  
)VV  !
;VV! "
}WW 
[ZZ 
HttpPutZZ 
(ZZ 
$strZZ 
)ZZ 
]ZZ 
public[[ 

async[[ 
Task[[ 
<[[ 
IActionResult[[ #
>[[# $
Update[[% +
([[+ ,
int[[, /
id[[0 2
,[[2 3
[[[4 5
FromBody[[5 =
][[= >
DoctorUpdateDTO[[? N
dto[[O R
)[[R S
{\\ 
if]] 

(]] 
User]] 
.]] 
IsInRole]] 
(]] 
$str]] "
)]]" #
)]]# $
{^^ 	
var__ 
userId__ 
=__ 
int__ 
.__ 
Parse__ "
(__" #
User__# '
.__' (
	FindFirst__( 1
(__1 2

ClaimTypes__2 <
.__< =
NameIdentifier__= K
)__K L
?__L M
.__M N
Value__N S
!__S T
)__T U
;__U V
if`` 
(`` 
id`` 
!=`` 
userId`` 
||`` 
id``  "
!=``# %
dto``& )
.``) *
DoctorId``* 2
)``2 3
returnaa 
Forbidaa 
(aa 
)aa 
;aa  
}bb 	
vardd 
existingDoctordd 
=dd 
awaitdd "
_doctorServicedd# 1
.dd1 2
GetDoctorByIdAsyncdd2 D
(ddD E
idddE G
)ddG H
;ddH I
ifee 

(ee 
existingDoctoree 
==ee 
nullee "
)ee" #
returnff 
NotFoundff 
(ff 
$strff /
)ff/ 0
;ff0 1
existingDoctorii 
.ii 
Nameii 
=ii 
dtoii !
.ii! "
Nameii" &
;ii& '
existingDoctorjj 
.jj 
Emailjj 
=jj 
dtojj "
.jj" #
Emailjj# (
;jj( )
existingDoctorkk 
.kk 
Passwordkk 
=kk  !
dtokk" %
.kk% &
Passwordkk& .
;kk. /
existingDoctorll 
.ll 
	Specialtyll  
=ll! "
dtoll# &
.ll& '
	Specialtyll' 0
;ll0 1
existingDoctormm 
.mm 

Experiencemm !
=mm" #
dtomm$ '
.mm' (

Experiencemm( 2
;mm2 3
existingDoctornn 
.nn 
Qualificationnn $
=nn% &
dtonn' *
.nn* +
Qualificationnn+ 8
;nn8 9
existingDoctoroo 
.oo 
Designationoo "
=oo# $
dtooo% (
.oo( )
Designationoo) 4
;oo4 5
awaitqq 
_doctorServiceqq 
.qq 
UpdateDoctorAsyncqq .
(qq. /
existingDoctorqq/ =
)qq= >
;qq> ?
returnrr 
Okrr 
(rr 
$strrr "
)rr" #
;rr# $
}ss 
[vv 

HttpDeletevv 
(vv 
$strvv 
)vv 
]vv 
[ww 
	Authorizeww 
(ww 
Rolesww 
=ww 
$strww 
)ww 
]ww  
publicxx 

asyncxx 
Taskxx 
<xx 
IActionResultxx #
>xx# $
Deletexx% +
(xx+ ,
intxx, /
idxx0 2
)xx2 3
{yy 
awaitzz 
_doctorServicezz 
.zz 
DeleteDoctorAsynczz .
(zz. /
idzz/ 1
)zz1 2
;zz2 3
return{{ 
Ok{{ 
({{ 
$str{{ "
){{" #
;{{# $
}|| 
}}} ∆é
jC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.API\Controllers\AuthController.cs
	namespace 	
	AmazeCare
 
. 
API 
. 
Controllers #
{ 
[ 
ApiController 
] 
[ 

ApiVersion 
( 
$str 
) 
] 
[ 
Route 

(
 
$str +
)+ ,
], -
public 

class 
AuthController 
:  !
ControllerBase" 0
{ 
private 
readonly 
IPatientService (
_patientService) 8
;8 9
private 
readonly 
IDoctorService '
_doctorService( 6
;6 7
private 
readonly 
IAdminService &
_adminService' 4
;4 5
private 
readonly 
IConfiguration '
_config( /
;/ 0
public 
AuthController 
( 
IPatientService 
patientService *
,* +
IDoctorService 
doctorService (
,( )
IAdminService 
adminService &
,& '
IConfiguration 
config !
)! "
{ 	
_patientService 
= 
patientService ,
;, -
_doctorService 
= 
doctorService *
;* +
_adminService   
=   
adminService   (
;  ( )
_config!! 
=!! 
config!! 
;!! 
}"" 	
[%% 	
HttpPost%%	 
(%% 
$str%% $
)%%$ %
]%%% &
[&& 	
AllowAnonymous&&	 
]&& 
public'' 
async'' 
Task'' 
<'' 
IActionResult'' '
>''' (
RegisterPatient'') 8
(''8 9
[''9 :
FromBody'': B
]''B C
RegisterPatientDTO''D V
dto''W Z
)''Z [
{(( 	
var)) 
existing)) 
=)) 
()) 
await)) !
_patientService))" 1
.))1 2
GetAllPatientsAsync))2 E
())E F
)))F G
)))G H
.** 
FirstOrDefault** 
(**  
x**  !
=>**" $
x**% &
.**& '
Email**' ,
==**- /
dto**0 3
.**3 4
Email**4 9
)**9 :
;**: ;
if,, 
(,, 
existing,, 
!=,, 
null,,  
),,  !
return-- 

BadRequest-- !
(--! "
$str--" 9
)--9 :
;--: ;
var// 
patient// 
=// 
new// 
Patient// %
{00 
Name11 
=11 
dto11 
.11 
Name11 
,11  
Email22 
=22 
dto22 
.22 
Email22 !
,22! "
Password33 
=33 
dto33 
.33 
Password33 '
,33' (
ContactNumber44 
=44 
dto44  #
.44# $
ContactNumber44$ 1
,441 2
DateOfBirth55 
=55 
dto55 !
.55! "
DateOfBirth55" -
,55- .
Gender66 
=66 
dto66 
.66 
Gender66 #
,66# $
}88 
;88 
await:: 
_patientService:: !
.::! "
AddPatientAsync::" 1
(::1 2
patient::2 9
)::9 :
;::: ;
var<< 
created<< 
=<< 
(<< 
await<<  
_patientService<<! 0
.<<0 1
GetAllPatientsAsync<<1 D
(<<D E
)<<E F
)<<F G
.== 
FirstOrDefault== 
(==  
x==  !
=>==" $
x==% &
.==& '
Email==' ,
====- /
dto==0 3
.==3 4
Email==4 9
)==9 :
;==: ;
var?? 
token?? 
=?? 
GenerateToken?? %
(??% &
created??& -
.??- .
Email??. 3
,??3 4
$str??5 >
,??> ?
created??@ G
.??G H
	PatientId??H Q
)??Q R
;??R S
return@@ 
Ok@@ 
(@@ 
new@@ 
{@@ 
token@@ !
}@@" #
)@@# $
;@@$ %
}AA 	
[DD 	
HttpPostDD	 
(DD 
$strDD #
)DD# $
]DD$ %
[EE 	
	AuthorizeEE	 
(EE 
RolesEE 
=EE 
$strEE "
)EE" #
]EE# $
publicFF 
asyncFF 
TaskFF 
<FF 
IActionResultFF '
>FF' (
RegisterDoctorFF) 7
(FF7 8
[FF8 9
FromBodyFF9 A
]FFA B
RegisterDoctorDTOFFC T
dtoFFU X
)FFX Y
{GG 	
varHH 
existingHH 
=HH 
(HH 
awaitHH !
_doctorServiceHH" 0
.HH0 1
GetAllDoctorsAsyncHH1 C
(HHC D
)HHD E
)HHE F
.II 
FirstOrDefaultII 
(II  
xII  !
=>II" $
xII% &
.II& '
EmailII' ,
==II- /
dtoII0 3
.II3 4
EmailII4 9
)II9 :
;II: ;
ifKK 
(KK 
existingKK 
!=KK 
nullKK  
)KK  !
returnLL 

BadRequestLL !
(LL! "
$strLL" 9
)LL9 :
;LL: ;
varNN 
doctorNN 
=NN 
newNN 
DoctorNN #
{OO 
NamePP 
=PP 
dtoPP 
.PP 
NamePP 
,PP  
EmailQQ 
=QQ 
dtoQQ 
.QQ 
EmailQQ !
,QQ! "
PasswordRR 
=RR 
dtoRR 
.RR 
PasswordRR '
,RR' (
	SpecialtySS 
=SS 
dtoSS 
.SS  
	SpecialtySS  )
,SS) *

ExperienceTT 
=TT 
dtoTT  
.TT  !

ExperienceTT! +
,TT+ ,
QualificationUU 
=UU 
dtoUU  #
.UU# $
QualificationUU$ 1
,UU1 2
DesignationVV 
=VV 
dtoVV !
.VV! "
DesignationVV" -
}WW 
;WW 
awaitYY 
_doctorServiceYY  
.YY  !
AddDoctorAsyncYY! /
(YY/ 0
doctorYY0 6
)YY6 7
;YY7 8
var[[ 
created[[ 
=[[ 
([[ 
await[[  
_doctorService[[! /
.[[/ 0
GetAllDoctorsAsync[[0 B
([[B C
)[[C D
)[[D E
.\\ 
FirstOrDefault\\ 
(\\  
x\\  !
=>\\" $
x\\% &
.\\& '
Email\\' ,
==\\- /
dto\\0 3
.\\3 4
Email\\4 9
)\\9 :
;\\: ;
var^^ 
token^^ 
=^^ 
GenerateToken^^ %
(^^% &
created^^& -
.^^- .
Email^^. 3
,^^3 4
$str^^5 =
,^^= >
created^^? F
.^^F G
DoctorId^^G O
)^^O P
;^^P Q
return__ 
Ok__ 
(__ 
new__ 
{__ 
token__ !
}__" #
)__# $
;__$ %
}`` 	
[cc 	
HttpPostcc	 
(cc 
$strcc "
)cc" #
]cc# $
[dd 	
AllowAnonymousdd	 
]dd 
publicee 
asyncee 
Taskee 
<ee 
IActionResultee '
>ee' (
RegisterAdminee) 6
(ee6 7
[ee7 8
FromBodyee8 @
]ee@ A
RegisterAdminDTOeeB R
dtoeeS V
)eeV W
{ff 	
vargg 
	allAdminsgg 
=gg 
awaitgg !
_adminServicegg" /
.gg/ 0
GetAllAdminsAsyncgg0 A
(ggA B
)ggB C
;ggC D
boolhh 
isFirstAdminhh 
=hh 
!hh  !
	allAdminshh! *
.hh* +
Anyhh+ .
(hh. /
)hh/ 0
;hh0 1
ifjj 
(jj 
!jj 
isFirstAdminjj 
&&jj  
!jj! "
(jj" #
Userjj# '
.jj' (
Identityjj( 0
?jj0 1
.jj1 2
IsAuthenticatedjj2 A
==jjB D
truejjE I
&&jjJ L
UserjjM Q
.jjQ R
IsInRolejjR Z
(jjZ [
$strjj[ b
)jjb c
)jjc d
)jjd e
returnkk 

StatusCodekk !
(kk! "
$numkk" %
,kk% &
$strkk' n
)kkn o
;kko p
varmm 
existingmm 
=mm 
	allAdminsmm $
.mm$ %
FirstOrDefaultmm% 3
(mm3 4
xmm4 5
=>mm6 8
xmm9 :
.mm: ;
Emailmm; @
==mmA C
dtommD G
.mmG H
EmailmmH M
)mmM N
;mmN O
ifnn 
(nn 
existingnn 
!=nn 
nullnn  
)nn  !
returnoo 

BadRequestoo !
(oo! "
$stroo" 9
)oo9 :
;oo: ;
varqq 
adminqq 
=qq 
newqq 
Adminqq !
{rr 
Namess 
=ss 
dtoss 
.ss 
Namess 
,ss  
Emailtt 
=tt 
dtott 
.tt 
Emailtt !
,tt! "
Passworduu 
=uu 
dtouu 
.uu 
Passworduu '
}vv 
;vv 
awaitxx 
_adminServicexx 
.xx  
AddAdminAsyncxx  -
(xx- .
adminxx. 3
)xx3 4
;xx4 5
varzz 
createdzz 
=zz 
(zz 
awaitzz  
_adminServicezz! .
.zz. /
GetAllAdminsAsynczz/ @
(zz@ A
)zzA B
)zzB C
.{{ 
FirstOrDefault{{ 
({{  
x{{  !
=>{{" $
x{{% &
.{{& '
Email{{' ,
=={{- /
dto{{0 3
.{{3 4
Email{{4 9
){{9 :
;{{: ;
var}} 
token}} 
=}} 
GenerateToken}} %
(}}% &
created}}& -
.}}- .
Email}}. 3
,}}3 4
$str}}5 <
,}}< =
created}}> E
.}}E F
AdminId}}F M
)}}M N
;}}N O
return~~ 
Ok~~ 
(~~ 
new~~ 
{~~ 
token~~ !
}~~" #
)~~# $
;~~$ %
} 	
[
ÇÇ 	
HttpPost
ÇÇ	 
(
ÇÇ 
$str
ÇÇ 
)
ÇÇ 
]
ÇÇ 
[
ÉÉ 	
AllowAnonymous
ÉÉ	 
]
ÉÉ 
public
ÑÑ 
async
ÑÑ 
Task
ÑÑ 
<
ÑÑ 
IActionResult
ÑÑ '
>
ÑÑ' (
Login
ÑÑ) .
(
ÑÑ. /
[
ÑÑ/ 0
FromBody
ÑÑ0 8
]
ÑÑ8 9
LoginRequestDTO
ÑÑ: I
login
ÑÑJ O
)
ÑÑO P
{
ÖÖ 	
var
áá 
admin
áá 
=
áá 
(
áá 
await
áá 
_adminService
áá ,
.
áá, -
GetAllAdminsAsync
áá- >
(
áá> ?
)
áá? @
)
áá@ A
.
àà 
FirstOrDefault
àà 
(
àà  
x
àà  !
=>
àà" $
x
àà% &
.
àà& '
Email
àà' ,
==
àà- /
login
àà0 5
.
àà5 6
Email
àà6 ;
&&
àà< >
x
àà? @
.
àà@ A
Password
ààA I
==
ààJ L
login
ààM R
.
ààR S
Password
ààS [
)
àà[ \
;
àà\ ]
if
ââ 
(
ââ 
admin
ââ 
!=
ââ 
null
ââ 
)
ââ 
return
ää 
Ok
ää 
(
ää 
new
ää 
{
ää 
token
ää  %
=
ää& '
GenerateToken
ää( 5
(
ää5 6
admin
ää6 ;
.
ää; <
Email
ää< A
,
ääA B
$str
ääC J
,
ääJ K
admin
ääL Q
.
ääQ R
AdminId
ääR Y
)
ääY Z
}
ää[ \
)
ää\ ]
;
ää] ^
var
çç 
doctor
çç 
=
çç 
(
çç 
await
çç 
_doctorService
çç  .
.
çç. / 
GetAllDoctorsAsync
çç/ A
(
ççA B
)
ççB C
)
ççC D
.
éé 
FirstOrDefault
éé 
(
éé  
x
éé  !
=>
éé" $
x
éé% &
.
éé& '
Email
éé' ,
==
éé- /
login
éé0 5
.
éé5 6
Email
éé6 ;
&&
éé< >
x
éé? @
.
éé@ A
Password
ééA I
==
ééJ L
login
ééM R
.
ééR S
Password
ééS [
)
éé[ \
;
éé\ ]
if
èè 
(
èè 
doctor
èè 
!=
èè 
null
èè 
)
èè 
return
êê 
Ok
êê 
(
êê 
new
êê 
{
êê 
token
êê  %
=
êê& '
GenerateToken
êê( 5
(
êê5 6
doctor
êê6 <
.
êê< =
Email
êê= B
,
êêB C
$str
êêD L
,
êêL M
doctor
êêN T
.
êêT U
DoctorId
êêU ]
)
êê] ^
}
êê_ `
)
êê` a
;
êêa b
var
ìì 
patient
ìì 
=
ìì 
(
ìì 
await
ìì  
_patientService
ìì! 0
.
ìì0 1!
GetAllPatientsAsync
ìì1 D
(
ììD E
)
ììE F
)
ììF G
.
îî 
FirstOrDefault
îî 
(
îî  
x
îî  !
=>
îî" $
x
îî% &
.
îî& '
Email
îî' ,
==
îî- /
login
îî0 5
.
îî5 6
Email
îî6 ;
&&
îî< >
x
îî? @
.
îî@ A
Password
îîA I
==
îîJ L
login
îîM R
.
îîR S
Password
îîS [
)
îî[ \
;
îî\ ]
if
ïï 
(
ïï 
patient
ïï 
!=
ïï 
null
ïï 
)
ïï  
return
ññ 
Ok
ññ 
(
ññ 
new
ññ 
{
ññ 
token
ññ  %
=
ññ& '
GenerateToken
ññ( 5
(
ññ5 6
patient
ññ6 =
.
ññ= >
Email
ññ> C
,
ññC D
$str
ññE N
,
ññN O
patient
ññP W
.
ññW X
	PatientId
ññX a
)
ñña b
}
ññc d
)
ññd e
;
ññe f
return
òò 
Unauthorized
òò 
(
òò  
$str
òò  5
)
òò5 6
;
òò6 7
}
ôô 	
private
úú 
string
úú 
GenerateToken
úú $
(
úú$ %
string
úú% +
email
úú, 1
,
úú1 2
string
úú3 9
role
úú: >
,
úú> ?
int
úú@ C
userId
úúD J
)
úúJ K
{
ùù 	
var
ûû 
claims
ûû 
=
ûû 
new
ûû 
[
ûû 
]
ûû 
{
üü 
new
†† 
Claim
†† 
(
†† 

ClaimTypes
†† $
.
††$ %
Email
††% *
,
††* +
email
††, 1
)
††1 2
,
††2 3
new
°° 
Claim
°° 
(
°° 

ClaimTypes
°° $
.
°°$ %
Role
°°% )
,
°°) *
role
°°+ /
)
°°/ 0
,
°°0 1
new
¢¢ 
Claim
¢¢ 
(
¢¢ 

ClaimTypes
¢¢ $
.
¢¢$ %
NameIdentifier
¢¢% 3
,
¢¢3 4
userId
¢¢5 ;
.
¢¢; <
ToString
¢¢< D
(
¢¢D E
)
¢¢E F
)
¢¢F G
}
££ 
;
££ 
var
•• 
key
•• 
=
•• 
new
•• "
SymmetricSecurityKey
•• .
(
••. /
Encoding
••/ 7
.
••7 8
UTF8
••8 <
.
••< =
GetBytes
••= E
(
••E F
_config
••F M
[
••M N
$str
••N _
]
••_ `
)
••` a
)
••a b
;
••b c
var
¶¶ 
creds
¶¶ 
=
¶¶ 
new
¶¶  
SigningCredentials
¶¶ .
(
¶¶. /
key
¶¶/ 2
,
¶¶2 3 
SecurityAlgorithms
¶¶4 F
.
¶¶F G

HmacSha256
¶¶G Q
)
¶¶Q R
;
¶¶R S
var
®® 
token
®® 
=
®® 
new
®® 
JwtSecurityToken
®® ,
(
®®, -
issuer
©© 
:
©© 
_config
©© 
[
©©  
$str
©©  4
]
©©4 5
,
©©5 6
audience
™™ 
:
™™ 
_config
™™ !
[
™™! "
$str
™™" 8
]
™™8 9
,
™™9 :
claims
´´ 
:
´´ 
claims
´´ 
,
´´ 
expires
¨¨ 
:
¨¨ 
DateTime
¨¨ !
.
¨¨! "
UtcNow
¨¨" (
.
¨¨( )

AddMinutes
¨¨) 3
(
¨¨3 4
Convert
¨¨4 ;
.
¨¨; <
ToDouble
¨¨< D
(
¨¨D E
_config
¨¨E L
[
¨¨L M
$str
¨¨M l
]
¨¨l m
)
¨¨m n
)
¨¨n o
,
¨¨o p 
signingCredentials
≠≠ "
:
≠≠" #
creds
≠≠$ )
)
ÆÆ 
;
ÆÆ 
return
∞∞ 
new
∞∞ %
JwtSecurityTokenHandler
∞∞ .
(
∞∞. /
)
∞∞/ 0
.
∞∞0 1

WriteToken
∞∞1 ;
(
∞∞; <
token
∞∞< A
)
∞∞A B
;
∞∞B C
}
±± 	
}
≤≤ 
}≥≥ ∏©
qC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.API\Controllers\AppointmentController.cs
[ 
ApiController 
] 
[		 

ApiVersion		 
(		 
$str		 
)		 
]		 
[

 
Route

 
(

 
$str

 /
)

/ 0
]

0 1
[ 
	Authorize 

]
 
public 
class !
AppointmentController "
:# $
ControllerBase% 3
{ 
private 
readonly 
IAppointmentService (
_appointmentService) <
;< =
private 
readonly 
IPatientService $
_patientService% 4
;4 5
private 
readonly 
IDoctorService #
_doctorService$ 2
;2 3
public 
!
AppointmentController  
(  !
IAppointmentService 
appointmentService .
,. /
IPatientService 
patientService &
,& '
IDoctorService 
doctorService $
)$ %
{ 
_appointmentService 
= 
appointmentService 0
;0 1
_patientService 
= 
patientService (
;( )
_doctorService 
= 
doctorService &
;& '
} 
[ 
HttpGet 
] 
[ 
	Authorize 
( 
Roles 
= 
$str 
) 
]  
public 

async 
Task 
< 
IActionResult #
># $
GetAll% +
(+ ,
), -
{   
var!! 
appointments!! 
=!! 
await!!  
_appointmentService!!! 4
.!!4 5#
GetAllAppointmentsAsync!!5 L
(!!L M
)!!M N
;!!N O
var## 
result## 
=## 
appointments## !
.##! "
Select##" (
(##( )
appointment##) 4
=>##5 7
new##8 ;"
AppointmentResponseDTO##< R
{$$ 	
AppointmentId%% 
=%% 
appointment%% '
.%%' (
AppointmentId%%( 5
,%%5 6
AppointmentDate&& 
=&& 
appointment&& )
.&&) *
AppointmentDate&&* 9
,&&9 :
Status'' 
='' 
appointment''  
.''  !
Status''! '
,''' (
PatientName(( 
=(( 
appointment(( %
.((% &
Patient((& -
?((- .
.((. /
Name((/ 3
,((3 4
	PatientId)) 
=)) 
appointment)) #
.))# $
	PatientId))$ -
,))- .

DoctorName** 
=** 
appointment** $
.**$ %
Doctor**% +
?**+ ,
.**, -
Name**- 1
,**1 2
DoctorId++ 
=++ 
appointment++ "
.++" #
DoctorId++# +
,+++ ,
Symptoms,, 
=,, 
appointment,, "
.,," #
Symptoms,,# +
,,,+ ,
ConsultingDetails-- 
=-- 
appointment--  +
.--+ ,
ConsultingDetails--, =
,--= >
Prescriptions.. 
=.. 
appointment.. '
...' (
Prescriptions..( 5
,..5 6
RecommendedTests// 
=// 
appointment// *
.//* +
RecommendedTests//+ ;
}00 	
)00	 

;00
 
return22 
Ok22 
(22 
result22 
)22 
;22 
}33 
[66 
HttpGet66 
(66 
$str66 
)66 
]66 
[77 
	Authorize77 
(77 
Roles77 
=77 
$str77 -
)77- .
]77. /
public88 

async88 
Task88 
<88 
IActionResult88 #
>88# $
Get88% (
(88( )
int88) ,
id88- /
)88/ 0
{99 
var:: 
appointment:: 
=:: 
await:: 
_appointmentService::  3
.::3 4#
GetAppointmentByIdAsync::4 K
(::K L
id::L N
)::N O
;::O P
if;; 

(;; 
appointment;; 
==;; 
null;; 
);;  
return;;! '
NotFound;;( 0
(;;0 1
);;1 2
;;;2 3
var== 
userId== 
=== 
int== 
.== 
Parse== 
(== 
User== #
.==# $
	FindFirst==$ -
(==- .

ClaimTypes==. 8
.==8 9
NameIdentifier==9 G
)==G H
?==H I
.==I J
Value==J O
!==O P
)==P Q
;==Q R
if?? 

(?? 
User?? 
.?? 
IsInRole?? 
(?? 
$str?? #
)??# $
&&??% '
appointment??( 3
.??3 4
	PatientId??4 =
!=??> @
userId??A G
)??G H
return@@ 
Forbid@@ 
(@@ 
)@@ 
;@@ 
ifBB 

(BB 
UserBB 
.BB 
IsInRoleBB 
(BB 
$strBB "
)BB" #
&&BB$ &
appointmentBB' 2
.BB2 3
DoctorIdBB3 ;
!=BB< >
userIdBB? E
)BBE F
returnCC 
ForbidCC 
(CC 
)CC 
;CC 
varEE 
dtoEE 
=EE 
newEE "
AppointmentResponseDTOEE ,
{FF 	
AppointmentIdGG 
=GG 
appointmentGG '
.GG' (
AppointmentIdGG( 5
,GG5 6
AppointmentDateHH 
=HH 
appointmentHH )
.HH) *
AppointmentDateHH* 9
,HH9 :
StatusII 
=II 
appointmentII  
.II  !
StatusII! '
,II' (
PatientNameJJ 
=JJ 
appointmentJJ %
.JJ% &
PatientJJ& -
?JJ- .
.JJ. /
NameJJ/ 3
,JJ3 4
	PatientIdKK 
=KK 
appointmentKK #
.KK# $
	PatientIdKK$ -
,KK- .

DoctorNameLL 
=LL 
appointmentLL $
.LL$ %
DoctorLL% +
?LL+ ,
.LL, -
NameLL- 1
,LL1 2
DoctorIdMM 
=MM 
appointmentMM "
.MM" #
DoctorIdMM# +
,MM+ ,
SymptomsNN 
=NN 
appointmentNN "
.NN" #
SymptomsNN# +
,NN+ ,
ConsultingDetailsOO 
=OO 
appointmentOO  +
.OO+ ,
ConsultingDetailsOO, =
,OO= >
PrescriptionsPP 
=PP 
appointmentPP '
.PP' (
PrescriptionsPP( 5
,PP5 6
RecommendedTestsQQ 
=QQ 
appointmentQQ *
.QQ* +
RecommendedTestsQQ+ ;
}RR 	
;RR	 

returnTT 
OkTT 
(TT 
dtoTT 
)TT 
;TT 
}UU 
[XX 
HttpPostXX 
]XX 
[YY 
	AuthorizeYY 
(YY 
RolesYY 
=YY 
$strYY  
)YY  !
]YY! "
publicZZ 

asyncZZ 
TaskZZ 
<ZZ 
IActionResultZZ #
>ZZ# $
CreateZZ% +
(ZZ+ ,
[ZZ, -
FromBodyZZ- 5
]ZZ5 6 
AppointmentCreateDTOZZ7 K
dtoZZL O
)ZZO P
{[[ 
var\\ 
userId\\ 
=\\ 
int\\ 
.\\ 
Parse\\ 
(\\ 
User\\ #
.\\# $
	FindFirst\\$ -
(\\- .

ClaimTypes\\. 8
.\\8 9
NameIdentifier\\9 G
)\\G H
?\\H I
.\\I J
Value\\J O
!\\O P
)\\P Q
;\\Q R
var__ 
appointment__ 
=__ 
new__ 
Appointment__ )
{`` 	
AppointmentDateaa 
=aa 
dtoaa !
.aa! "
AppointmentDateaa" 1
,aa1 2
Statusbb 
=bb 
$strbb  
,bb  !
DoctorIdcc 
=cc 
dtocc 
.cc 
DoctorIdcc #
,cc# $
	PatientIddd 
=dd 
userIddd 
,dd 
Symptomsee 
=ee 
dtoee 
.ee 
Symptomsee #
}ff 	
;ff	 

awaithh 
_appointmentServicehh !
.hh! "
AddAppointmentAsynchh" 5
(hh5 6
appointmenthh6 A
)hhA B
;hhB C
returnii 
Okii 
(ii 
$strii )
)ii) *
;ii* +
}jj 
[mm 
HttpPutmm 
(mm 
$strmm 
)mm 
]mm 
[nn 
	Authorizenn 
(nn 
Rolesnn 
=nn 
$strnn 
)nn  
]nn  !
publicoo 

asyncoo 
Taskoo 
<oo 
IActionResultoo #
>oo# $
Updateoo% +
(oo+ ,
intoo, /
idoo0 2
,oo2 3
[oo4 5
FromBodyoo5 =
]oo= > 
AppointmentUpdateDTOoo? S
dtoooT W
)ooW X
{pp 
varqq 
userIdqq 
=qq 
intqq 
.qq 
Parseqq 
(qq 
Userqq #
.qq# $
	FindFirstqq$ -
(qq- .

ClaimTypesqq. 8
.qq8 9
NameIdentifierqq9 G
)qqG H
?qqH I
.qqI J
ValueqqJ O
!qqO P
)qqP Q
;qqQ R
varss 
appointmentss 
=ss 
awaitss 
_appointmentServicess  3
.ss3 4#
GetAppointmentByIdAsyncss4 K
(ssK L
idssL N
)ssN O
;ssO P
iftt 

(tt 
appointmenttt 
==tt 
nulltt 
)tt  
returntt! '
NotFoundtt( 0
(tt0 1
)tt1 2
;tt2 3
ifvv 

(vv 
appointmentvv 
.vv 
DoctorIdvv  
!=vv! #
userIdvv$ *
||vv+ -
dtovv. 1
.vv1 2
AppointmentIdvv2 ?
!=vv@ B
idvvC E
)vvE F
returnww 
Forbidww 
(ww 
)ww 
;ww 
appointmentyy 
.yy 
ConsultingDetailsyy %
=yy& '
dtoyy( +
.yy+ ,
ConsultingDetailsyy, =
;yy= >
appointmentzz 
.zz 
Prescriptionszz !
=zz" #
dtozz$ '
.zz' (
Prescriptionszz( 5
;zz5 6
appointment{{ 
.{{ 
RecommendedTests{{ $
={{% &
dto{{' *
.{{* +
RecommendedTests{{+ ;
;{{; <
appointment|| 
.|| 
Status|| 
=|| 
$str|| (
;||( )
await~~ 
_appointmentService~~ !
.~~! ""
UpdateAppointmentAsync~~" 8
(~~8 9
appointment~~9 D
)~~D E
;~~E F
return 
Ok 
( 
$str (
)( )
;) *
}
ÄÄ 
[
ÉÉ 

HttpDelete
ÉÉ 
(
ÉÉ 
$str
ÉÉ 
)
ÉÉ 
]
ÉÉ 
[
ÑÑ 
	Authorize
ÑÑ 
(
ÑÑ 
Roles
ÑÑ 
=
ÑÑ 
$str
ÑÑ -
)
ÑÑ- .
]
ÑÑ. /
public
ÖÖ 

async
ÖÖ 
Task
ÖÖ 
<
ÖÖ 
IActionResult
ÖÖ #
>
ÖÖ# $
Delete
ÖÖ% +
(
ÖÖ+ ,
int
ÖÖ, /
id
ÖÖ0 2
)
ÖÖ2 3
{
ÜÜ 
var
áá 
appointment
áá 
=
áá 
await
áá !
_appointmentService
áá  3
.
áá3 4%
GetAppointmentByIdAsync
áá4 K
(
ááK L
id
ááL N
)
ááN O
;
ááO P
if
àà 

(
àà 
appointment
àà 
==
àà 
null
àà 
)
àà  
return
àà! '
NotFound
àà( 0
(
àà0 1
)
àà1 2
;
àà2 3
var
ää 
userId
ää 
=
ää 
int
ää 
.
ää 
Parse
ää 
(
ää 
User
ää #
.
ää# $
	FindFirst
ää$ -
(
ää- .

ClaimTypes
ää. 8
.
ää8 9
NameIdentifier
ää9 G
)
ääG H
?
ääH I
.
ääI J
Value
ääJ O
!
ääO P
)
ääP Q
;
ääQ R
if
çç 

(
çç 
User
çç 
.
çç 
IsInRole
çç 
(
çç 
$str
çç #
)
çç# $
&&
çç% '
appointment
çç( 3
.
çç3 4
	PatientId
çç4 =
!=
çç> @
userId
ççA G
)
ççG H
return
éé 
Forbid
éé 
(
éé 
)
éé 
;
éé 
if
ëë 

(
ëë 
User
ëë 
.
ëë 
IsInRole
ëë 
(
ëë 
$str
ëë "
)
ëë" #
&&
ëë$ &
appointment
ëë' 2
.
ëë2 3
DoctorId
ëë3 ;
!=
ëë< >
userId
ëë? E
)
ëëE F
return
íí 
Forbid
íí 
(
íí 
)
íí 
;
íí 
await
ññ !
_appointmentService
ññ !
.
ññ! "$
DeleteAppointmentAsync
ññ" 8
(
ññ8 9
id
ññ9 ;
)
ññ; <
;
ññ< =
return
óó 
Ok
óó 
(
óó 
$str
óó )
)
óó) *
;
óó* +
}
òò 
[
õõ 
HttpGet
õõ 
(
õõ 
$str
õõ  
)
õõ  !
]
õõ! "
[
úú 
	Authorize
úú 
(
úú 
Roles
úú 
=
úú 
$str
úú %
)
úú% &
]
úú& '
public
ùù 

async
ùù 
Task
ùù 
<
ùù 
IActionResult
ùù #
>
ùù# $
GetByDoctor
ùù% 0
(
ùù0 1
int
ùù1 4
doctorId
ùù5 =
)
ùù= >
{
ûû 
var
üü 
userId
üü 
=
üü 
int
üü 
.
üü 
Parse
üü 
(
üü 
User
üü #
.
üü# $
	FindFirst
üü$ -
(
üü- .

ClaimTypes
üü. 8
.
üü8 9
NameIdentifier
üü9 G
)
üüG H
!
üüH I
.
üüI J
Value
üüJ O
)
üüO P
;
üüP Q
var
†† 
role
†† 
=
†† 
User
†† 
.
†† 
	FindFirst
†† !
(
††! "

ClaimTypes
††" ,
.
††, -
Role
††- 1
)
††1 2
?
††2 3
.
††3 4
Value
††4 9
;
††9 :
if
°° 

(
°° 
role
°° 
==
°° 
$str
°° 
&&
°° 
userId
°°  &
!=
°°' )
doctorId
°°* 2
)
°°2 3
return
°°4 :
Forbid
°°; A
(
°°A B
)
°°B C
;
°°C D
var
§§ 
appointments
§§ 
=
§§ 
await
§§  !
_appointmentService
§§! 4
.
§§4 5,
GetAppointmentsByDoctorIdAsync
§§5 S
(
§§S T
doctorId
§§T \
)
§§\ ]
;
§§] ^
var
¶¶ 
appointmentDtos
¶¶ 
=
¶¶ 
appointments
¶¶ *
.
¶¶* +
Select
¶¶+ 1
(
¶¶1 2
a
¶¶2 3
=>
¶¶4 6
new
¶¶7 :$
AppointmentResponseDTO
¶¶; Q
{
ßß 	
AppointmentId
®® 
=
®® 
a
®® 
.
®® 
AppointmentId
®® +
,
®®+ ,
PatientName
©© 
=
©© 
a
©© 
.
©© 
Patient
©© #
.
©©# $
Name
©©$ (
,
©©( )
	PatientId
™™ 
=
™™ 
a
™™ 
.
™™ 
	PatientId
™™ #
,
™™# $

DoctorName
´´ 
=
´´ 
a
´´ 
.
´´ 
Doctor
´´ !
.
´´! "
Name
´´" &
,
´´& '
DoctorId
¨¨ 
=
¨¨ 
a
¨¨ 
.
¨¨ 
DoctorId
¨¨ !
,
¨¨! "
AppointmentDate
≠≠ 
=
≠≠ 
a
≠≠ 
.
≠≠  
AppointmentDate
≠≠  /
,
≠≠/ 0
Symptoms
ÆÆ 
=
ÆÆ 
a
ÆÆ 
.
ÆÆ 
Symptoms
ÆÆ !
,
ÆÆ! "
Status
ØØ 
=
ØØ 
a
ØØ 
.
ØØ 
Status
ØØ 
,
ØØ 
ConsultingDetails
∞∞ 
=
∞∞ 
a
∞∞  !
.
∞∞! "
ConsultingDetails
∞∞" 3
,
∞∞3 4
Prescriptions
±± 
=
±± 
a
±± 
.
±± 
Prescriptions
±± +
,
±±+ ,
RecommendedTests
≤≤ 
=
≤≤ 
a
≤≤  
.
≤≤  !
RecommendedTests
≤≤! 1
}
≥≥ 	
)
≥≥	 

;
≥≥
 
return
µµ 
Ok
µµ 
(
µµ 
appointmentDtos
µµ !
)
µµ! "
;
µµ" #
}
∂∂ 
[
∏∏ 
HttpGet
∏∏ 
(
∏∏ 
$str
∏∏ "
)
∏∏" #
]
∏∏# $
[
ππ 
	Authorize
ππ 
(
ππ 
Roles
ππ 
=
ππ 
$str
ππ -
)
ππ- .
]
ππ. /
public
∫∫ 

async
∫∫ 
Task
∫∫ 
<
∫∫ 
IActionResult
∫∫ #
>
∫∫# $
GetByPatient
∫∫% 1
(
∫∫1 2
int
∫∫2 5
	patientId
∫∫6 ?
)
∫∫? @
{
ªª 
var
ºº 
userRole
ºº 
=
ºº 
User
ºº 
.
ºº 
	FindFirst
ºº %
(
ºº% &

ClaimTypes
ºº& 0
.
ºº0 1
Role
ºº1 5
)
ºº5 6
?
ºº6 7
.
ºº7 8
Value
ºº8 =
;
ºº= >
var
ΩΩ 
userIdClaim
ΩΩ 
=
ΩΩ 
User
ΩΩ 
.
ΩΩ 
	FindFirst
ΩΩ (
(
ΩΩ( )

ClaimTypes
ΩΩ) 3
.
ΩΩ3 4
NameIdentifier
ΩΩ4 B
)
ΩΩB C
?
ΩΩC D
.
ΩΩD E
Value
ΩΩE J
;
ΩΩJ K
if
øø 

(
øø 
userIdClaim
øø 
==
øø 
null
øø 
)
øø  
return
¿¿ 
Unauthorized
¿¿ 
(
¿¿  
)
¿¿  !
;
¿¿! "
int
¬¬ 
userId
¬¬ 
=
¬¬ 
int
¬¬ 
.
¬¬ 
Parse
¬¬ 
(
¬¬ 
userIdClaim
¬¬ *
)
¬¬* +
;
¬¬+ ,
if
ƒƒ 

(
ƒƒ 
userRole
ƒƒ 
==
ƒƒ 
$str
ƒƒ !
&&
ƒƒ" $
userId
ƒƒ% +
!=
ƒƒ, .
	patientId
ƒƒ/ 8
)
ƒƒ8 9
return
≈≈ 
Forbid
≈≈ 
(
≈≈ 
)
≈≈ 
;
≈≈ 
var
«« 
appointments
«« 
=
«« 
await
««  !
_appointmentService
««! 4
.
««4 5-
GetAppointmentsByPatientIdAsync
««5 T
(
««T U
	patientId
««U ^
)
««^ _
;
««_ `
var
…… 
appointmentDtos
…… 
=
…… 
appointments
…… *
.
……* +
Select
……+ 1
(
……1 2
a
……2 3
=>
……4 6
new
……7 :$
AppointmentResponseDTO
……; Q
{
   	
AppointmentId
ÀÀ 
=
ÀÀ 
a
ÀÀ 
.
ÀÀ 
AppointmentId
ÀÀ +
,
ÀÀ+ ,
PatientName
ÃÃ 
=
ÃÃ 
a
ÃÃ 
.
ÃÃ 
Patient
ÃÃ #
.
ÃÃ# $
Name
ÃÃ$ (
,
ÃÃ( )
	PatientId
ÕÕ 
=
ÕÕ 
a
ÕÕ 
.
ÕÕ 
	PatientId
ÕÕ #
,
ÕÕ# $

DoctorName
ŒŒ 
=
ŒŒ 
a
ŒŒ 
.
ŒŒ 
Doctor
ŒŒ !
.
ŒŒ! "
Name
ŒŒ" &
,
ŒŒ& '
DoctorId
œœ 
=
œœ 
a
œœ 
.
œœ 
DoctorId
œœ !
,
œœ! "
AppointmentDate
–– 
=
–– 
a
–– 
.
––  
AppointmentDate
––  /
,
––/ 0
Symptoms
—— 
=
—— 
a
—— 
.
—— 
Symptoms
—— !
,
——! "
Status
““ 
=
““ 
a
““ 
.
““ 
Status
““ 
,
““ 
ConsultingDetails
”” 
=
”” 
a
””  !
.
””! "
ConsultingDetails
””" 3
,
””3 4
Prescriptions
‘‘ 
=
‘‘ 
a
‘‘ 
.
‘‘ 
Prescriptions
‘‘ +
,
‘‘+ ,
RecommendedTests
’’ 
=
’’ 
a
’’  
.
’’  !
RecommendedTests
’’! 1
}
÷÷ 	
)
÷÷	 

;
÷÷
 
return
ÿÿ 
Ok
ÿÿ 
(
ÿÿ 
appointmentDtos
ÿÿ !
)
ÿÿ! "
;
ÿÿ" #
}
ŸŸ 
}€€ «1
kC:\Users\gokul\OneDrive\Desktop\C#_workspace\AmazeCareSolution\AmazeCare.API\Controllers\AdminController.cs
[ 
ApiController 
] 
[ 

ApiVersion 
( 
$str 
) 
] 
[		 
Route		 
(		 
$str		 )
)		) *
]		* +
[

 
	Authorize

 

(


 
Roles

 
=

 
$str

 
)

 
]

 
public 
class 
AdminController 
: 
ControllerBase -
{ 
private 
readonly 
IAdminService "
_adminService# 0
;0 1
public 

AdminController 
( 
IAdminService (
adminService) 5
)5 6
{ 
_adminService 
= 
adminService $
;$ %
} 
[ 
HttpGet 
] 
public 

async 
Task 
< 
IActionResult #
># $
GetAll% +
(+ ,
), -
{ 
var 
admins 
= 
await 
_adminService (
.( )
GetAllAdminsAsync) :
(: ;
); <
;< =
var 
result 
= 
admins 
. 
Select "
(" #
a# $
=>% '
new( +
AdminResponseDTO, <
{ 	
AdminId 
= 
a 
. 
AdminId 
,  
Name 
= 
a 
. 
Name 
, 
Email 
= 
a 
. 
Email 
} 	
)	 

;
 
return!! 
Ok!! 
(!! 
result!! 
)!! 
;!! 
}"" 
[%% 
HttpGet%% 
(%% 
$str%% 
)%% 
]%% 
public&& 

async&& 
Task&& 
<&& 
IActionResult&& #
>&&# $
Get&&% (
(&&( )
int&&) ,
id&&- /
)&&/ 0
{'' 
var(( 
admin(( 
=(( 
await(( 
_adminService(( '
.((' (
GetAdminByIdAsync((( 9
(((9 :
id((: <
)((< =
;((= >
if)) 

()) 
admin)) 
==)) 
null)) 
))) 
return)) !
NotFound))" *
())* +
)))+ ,
;)), -
var++ 
result++ 
=++ 
new++ 
AdminResponseDTO++ )
{,, 	
AdminId-- 
=-- 
admin-- 
.-- 
AdminId-- #
,--# $
Name.. 
=.. 
admin.. 
... 
Name.. 
,.. 
Email// 
=// 
admin// 
.// 
Email// 
}00 	
;00	 

return22 
Ok22 
(22 
result22 
)22 
;22 
}33 
[66 
HttpPost66 
]66 
public77 

async77 
Task77 
<77 
IActionResult77 #
>77# $
Create77% +
(77+ ,
[77, -
FromBody77- 5
]775 6
AdminCreateDTO777 E
dto77F I
)77I J
{88 
var99 
admin99 
=99 
new99 
Admin99 
{:: 	
Name;; 
=;; 
dto;; 
.;; 
Name;; 
,;; 
Email<< 
=<< 
dto<< 
.<< 
Email<< 
,<< 
Password== 
=== 
dto== 
.== 
Password== #
}>> 	
;>>	 

await@@ 
_adminService@@ 
.@@ 
AddAdminAsync@@ )
(@@) *
admin@@* /
)@@/ 0
;@@0 1
returnAA 
OkAA 
(AA 
$strAA 
)AA  
;AA  !
}BB 
[EE 
HttpPutEE 
(EE 
$strEE 
)EE 
]EE 
publicFF 

asyncFF 
TaskFF 
<FF 
IActionResultFF #
>FF# $
UpdateFF% +
(FF+ ,
intFF, /
idFF0 2
,FF2 3
[FF4 5
FromBodyFF5 =
]FF= >
AdminUpdateDTOFF? M
dtoFFN Q
)FFQ R
{GG 
ifHH 

(HH 
idHH 
!=HH 
dtoHH 
.HH 
AdminIdHH 
)HH 
returnHH %

BadRequestHH& 0
(HH0 1
)HH1 2
;HH2 3
varJJ 
adminJJ 
=JJ 
newJJ 
AdminJJ 
{KK 	
AdminIdLL 
=LL 
dtoLL 
.LL 
AdminIdLL !
,LL! "
NameMM 
=MM 
dtoMM 
.MM 
NameMM 
,MM 
EmailNN 
=NN 
dtoNN 
.NN 
EmailNN 
,NN 
PasswordOO 
=OO 
dtoOO 
.OO 
PasswordOO #
}PP 	
;PP	 

awaitRR 
_adminServiceRR 
.RR 
UpdateAdminAsyncRR ,
(RR, -
adminRR- 2
)RR2 3
;RR3 4
returnSS 
OkSS 
(SS 
$strSS !
)SS! "
;SS" #
}TT 
[WW 

HttpDeleteWW 
(WW 
$strWW 
)WW 
]WW 
publicXX 

asyncXX 
TaskXX 
<XX 
IActionResultXX #
>XX# $
DeleteXX% +
(XX+ ,
intXX, /
idXX0 2
)XX2 3
{YY 
awaitZZ 
_adminServiceZZ 
.ZZ 
DeleteAdminAsyncZZ ,
(ZZ, -
idZZ- /
)ZZ/ 0
;ZZ0 1
return[[ 
Ok[[ 
([[ 
$str[[ !
)[[! "
;[[" #
}\\ 
}]] 